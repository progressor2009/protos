// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: v8platform/ras/api/v1/cluster_admin.proto

package v1

import (
	_ "github.com/v8platform/protos/v8platform/ras"
	_ "github.com/v8platform/protos/v8platform/ras/serialize"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetClusterAdminsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *GetClusterAdminsRequest) Reset() {
	*x = GetClusterAdminsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterAdminsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterAdminsRequest) ProtoMessage() {}

func (x *GetClusterAdminsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterAdminsRequest.ProtoReflect.Descriptor instead.
func (*GetClusterAdminsRequest) Descriptor() ([]byte, []int) {
	return file_v8platform_ras_api_v1_cluster_admin_proto_rawDescGZIP(), []int{0}
}

func (x *GetClusterAdminsRequest) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type GetClusterAdminsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ClusterAdminInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetClusterAdminsResponse) Reset() {
	*x = GetClusterAdminsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterAdminsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterAdminsResponse) ProtoMessage() {}

func (x *GetClusterAdminsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterAdminsResponse.ProtoReflect.Descriptor instead.
func (*GetClusterAdminsResponse) Descriptor() ([]byte, []int) {
	return file_v8platform_ras_api_v1_cluster_admin_proto_rawDescGZIP(), []int{1}
}

func (x *GetClusterAdminsResponse) GetItems() []*ClusterAdminInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

type DeleteClusterAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster   *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	AdminName string   `protobuf:"bytes,2,opt,name=admin_name,json=adminName,proto3" json:"admin_name,omitempty" ras:",2"`
}

func (x *DeleteClusterAdminRequest) Reset() {
	*x = DeleteClusterAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteClusterAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterAdminRequest) ProtoMessage() {}

func (x *DeleteClusterAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterAdminRequest.ProtoReflect.Descriptor instead.
func (*DeleteClusterAdminRequest) Descriptor() ([]byte, []int) {
	return file_v8platform_ras_api_v1_cluster_admin_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteClusterAdminRequest) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *DeleteClusterAdminRequest) GetAdminName() string {
	if x != nil {
		return x.AdminName
	}
	return ""
}

type AddClusterAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster   *Cluster          `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	AdminInfo *ClusterAdminInfo `protobuf:"bytes,2,opt,name=admin_info,json=adminInfo,proto3" json:"admin_info,omitempty" ras:",2"`
}

func (x *AddClusterAdminRequest) Reset() {
	*x = AddClusterAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddClusterAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClusterAdminRequest) ProtoMessage() {}

func (x *AddClusterAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClusterAdminRequest.ProtoReflect.Descriptor instead.
func (*AddClusterAdminRequest) Descriptor() ([]byte, []int) {
	return file_v8platform_ras_api_v1_cluster_admin_proto_rawDescGZIP(), []int{3}
}

func (x *AddClusterAdminRequest) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *AddClusterAdminRequest) GetAdminInfo() *ClusterAdminInfo {
	if x != nil {
		return x.AdminInfo
	}
	return nil
}

type ClusterAdminInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Description         string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Password            string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	PasswordAuthAllowed bool   `protobuf:"varint,4,opt,name=password_auth_allowed,json=passwordAuthAllowed,proto3" json:"password_auth_allowed,omitempty"`
	SysAuthAllowed      bool   `protobuf:"varint,5,opt,name=sys_auth_allowed,json=sysAuthAllowed,proto3" json:"sys_auth_allowed,omitempty"`
	SysUserName         string `protobuf:"bytes,6,opt,name=sys_user_name,json=sysUserName,proto3" json:"sys_user_name,omitempty"`
}

func (x *ClusterAdminInfo) Reset() {
	*x = ClusterAdminInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterAdminInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterAdminInfo) ProtoMessage() {}

func (x *ClusterAdminInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterAdminInfo.ProtoReflect.Descriptor instead.
func (*ClusterAdminInfo) Descriptor() ([]byte, []int) {
	return file_v8platform_ras_api_v1_cluster_admin_proto_rawDescGZIP(), []int{4}
}

func (x *ClusterAdminInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClusterAdminInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ClusterAdminInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ClusterAdminInfo) GetPasswordAuthAllowed() bool {
	if x != nil {
		return x.PasswordAuthAllowed
	}
	return false
}

func (x *ClusterAdminInfo) GetSysAuthAllowed() bool {
	if x != nil {
		return x.SysAuthAllowed
	}
	return false
}

func (x *ClusterAdminInfo) GetSysUserName() string {
	if x != nil {
		return x.SysUserName
	}
	return ""
}

var File_v8platform_ras_api_v1_cluster_admin_proto protoreflect.FileDescriptor

var file_v8platform_ras_api_v1_cluster_admin_proto_rawDesc = []byte{
	0x0a, 0x29, 0x76, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x72, 0x61, 0x73,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x72, 0x61, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x27, 0x76, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x72, 0x61, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x76, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x72, 0x61, 0x73,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x76, 0x38, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x72, 0x61, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x48, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72,
	0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x4e, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x78, 0x0a, 0x19, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x9a, 0x84, 0x9e, 0x03,
	0x08, 0x72, 0x61, 0x73, 0x3a, 0x22, 0x2c, 0x32, 0x22, 0x52, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x4a,
	0x0a, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x0d, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x72, 0x61, 0x73, 0x3a, 0x22, 0x2c, 0x32, 0x22, 0x52,
	0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xe6, 0x01, 0x0a, 0x10, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41, 0x75, 0x74, 0x68, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x79, 0x73, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x73, 0x79, 0x73, 0x41, 0x75, 0x74, 0x68, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12,
	0x22, 0x0a, 0x0d, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x32, 0x86, 0x02, 0x0a, 0x13, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x06, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x61, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x22,
	0x2e, 0x72, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x25, 0x2e, 0x72, 0x61,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x34, 0x5a, 0x32,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x38, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x38, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x72, 0x61, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v8platform_ras_api_v1_cluster_admin_proto_rawDescOnce sync.Once
	file_v8platform_ras_api_v1_cluster_admin_proto_rawDescData = file_v8platform_ras_api_v1_cluster_admin_proto_rawDesc
)

func file_v8platform_ras_api_v1_cluster_admin_proto_rawDescGZIP() []byte {
	file_v8platform_ras_api_v1_cluster_admin_proto_rawDescOnce.Do(func() {
		file_v8platform_ras_api_v1_cluster_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_v8platform_ras_api_v1_cluster_admin_proto_rawDescData)
	})
	return file_v8platform_ras_api_v1_cluster_admin_proto_rawDescData
}

var file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_v8platform_ras_api_v1_cluster_admin_proto_goTypes = []interface{}{
	(*GetClusterAdminsRequest)(nil),   // 0: ras.api.v1.GetClusterAdminsRequest
	(*GetClusterAdminsResponse)(nil),  // 1: ras.api.v1.GetClusterAdminsResponse
	(*DeleteClusterAdminRequest)(nil), // 2: ras.api.v1.DeleteClusterAdminRequest
	(*AddClusterAdminRequest)(nil),    // 3: ras.api.v1.AddClusterAdminRequest
	(*ClusterAdminInfo)(nil),          // 4: ras.api.v1.ClusterAdminInfo
	(*Cluster)(nil),                   // 5: ras.api.v1.Cluster
	(*emptypb.Empty)(nil),             // 6: google.protobuf.Empty
}
var file_v8platform_ras_api_v1_cluster_admin_proto_depIdxs = []int32{
	5, // 0: ras.api.v1.GetClusterAdminsRequest.cluster:type_name -> ras.api.v1.Cluster
	4, // 1: ras.api.v1.GetClusterAdminsResponse.items:type_name -> ras.api.v1.ClusterAdminInfo
	5, // 2: ras.api.v1.DeleteClusterAdminRequest.cluster:type_name -> ras.api.v1.Cluster
	5, // 3: ras.api.v1.AddClusterAdminRequest.cluster:type_name -> ras.api.v1.Cluster
	4, // 4: ras.api.v1.AddClusterAdminRequest.admin_info:type_name -> ras.api.v1.ClusterAdminInfo
	0, // 5: ras.api.v1.ClusterAdminService.Admins:input_type -> ras.api.v1.GetClusterAdminsRequest
	3, // 6: ras.api.v1.ClusterAdminService.AddAdmin:input_type -> ras.api.v1.AddClusterAdminRequest
	2, // 7: ras.api.v1.ClusterAdminService.DeleteAdmin:input_type -> ras.api.v1.DeleteClusterAdminRequest
	1, // 8: ras.api.v1.ClusterAdminService.Admins:output_type -> ras.api.v1.GetClusterAdminsResponse
	6, // 9: ras.api.v1.ClusterAdminService.AddAdmin:output_type -> google.protobuf.Empty
	6, // 10: ras.api.v1.ClusterAdminService.DeleteAdmin:output_type -> google.protobuf.Empty
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_v8platform_ras_api_v1_cluster_admin_proto_init() }
func file_v8platform_ras_api_v1_cluster_admin_proto_init() {
	if File_v8platform_ras_api_v1_cluster_admin_proto != nil {
		return
	}
	file_v8platform_ras_api_v1_helpers_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterAdminsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterAdminsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteClusterAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddClusterAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterAdminInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v8platform_ras_api_v1_cluster_admin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v8platform_ras_api_v1_cluster_admin_proto_goTypes,
		DependencyIndexes: file_v8platform_ras_api_v1_cluster_admin_proto_depIdxs,
		MessageInfos:      file_v8platform_ras_api_v1_cluster_admin_proto_msgTypes,
	}.Build()
	File_v8platform_ras_api_v1_cluster_admin_proto = out.File
	file_v8platform_ras_api_v1_cluster_admin_proto_rawDesc = nil
	file_v8platform_ras_api_v1_cluster_admin_proto_goTypes = nil
	file_v8platform_ras_api_v1_cluster_admin_proto_depIdxs = nil
}
