// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: v8platform/serialize/v1/infobases.proto

package serializev1

import (
	_ "github.com/v8platform/protoc-gen-go-ras/plugin/ras/encoding"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InfobaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid                                   string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	DateOffset                             int32                  `protobuf:"varint,3,opt,name=date_offset,json=dateOffset,proto3" json:"date_offset,omitempty"`
	Dbms                                   string                 `protobuf:"bytes,4,opt,name=dbms,proto3" json:"dbms,omitempty"`
	DbServer                               string                 `protobuf:"bytes,5,opt,name=db_server,json=dbServer,proto3" json:"db_server,omitempty"`
	DbName                                 string                 `protobuf:"bytes,6,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
	DbUser                                 string                 `protobuf:"bytes,7,opt,name=db_user,json=dbUser,proto3" json:"db_user,omitempty"`
	DbPwd                                  string                 `protobuf:"bytes,8,opt,name=db_pwd,json=dbPwd,proto3" json:"db_pwd,omitempty"`
	DeniedFrom                             *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=denied_from,json=deniedFrom,proto3" json:"denied_from,omitempty"`
	DeniedMessage                          string                 `protobuf:"bytes,10,opt,name=denied_message,json=deniedMessage,proto3" json:"denied_message,omitempty"`
	DeniedParameter                        string                 `protobuf:"bytes,11,opt,name=denied_parameter,json=deniedParameter,proto3" json:"denied_parameter,omitempty"`
	DeniedTo                               *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=denied_to,json=deniedTo,proto3" json:"denied_to,omitempty"`
	Descr                                  string                 `protobuf:"bytes,13,opt,name=descr,proto3" json:"descr,omitempty"`
	Locale                                 string                 `protobuf:"bytes,14,opt,name=locale,proto3" json:"locale,omitempty"`
	Name                                   string                 `protobuf:"bytes,15,opt,name=name,proto3" json:"name,omitempty"`
	PermissionCode                         string                 `protobuf:"bytes,16,opt,name=permission_code,json=permissionCode,proto3" json:"permission_code,omitempty"`
	ScheduledJobsDeny                      bool                   `protobuf:"varint,17,opt,name=scheduled_jobs_deny,json=scheduledJobsDeny,proto3" json:"scheduled_jobs_deny,omitempty"`
	SecurityLevel                          int32                  `protobuf:"varint,18,opt,name=security_level,json=securityLevel,proto3" json:"security_level,omitempty"`
	SessionsDeny                           bool                   `protobuf:"varint,19,opt,name=sessions_deny,json=sessionsDeny,proto3" json:"sessions_deny,omitempty"`
	LicenseDistribution                    int32                  `protobuf:"varint,20,opt,name=license_distribution,json=licenseDistribution,proto3" json:"license_distribution,omitempty"`
	ExternalSessionManagerConnectionString string                 `protobuf:"bytes,21,opt,name=external_session_manager_connection_string,json=externalSessionManagerConnectionString,proto3" json:"external_session_manager_connection_string,omitempty"`
	ExternalSessionManagerRequired         bool                   `protobuf:"varint,22,opt,name=external_session_manager_required,json=externalSessionManagerRequired,proto3" json:"external_session_manager_required,omitempty"`
	SecurityProfileName                    string                 `protobuf:"bytes,23,opt,name=SecurityProfileName,proto3" json:"SecurityProfileName,omitempty"`
	SafeModeSecurityProfileName            string                 `protobuf:"bytes,24,opt,name=SafeModeSecurityProfileName,proto3" json:"SafeModeSecurityProfileName,omitempty"`
	// version >=9
	ReserveWorkingProcesses bool `protobuf:"varint,25,opt,name=ReserveWorkingProcesses,proto3" json:"ReserveWorkingProcesses,omitempty"`
}

func (x *InfobaseInfo) Reset() {
	*x = InfobaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v8platform_serialize_v1_infobases_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfobaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfobaseInfo) ProtoMessage() {}

func (x *InfobaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v8platform_serialize_v1_infobases_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfobaseInfo.ProtoReflect.Descriptor instead.
func (*InfobaseInfo) Descriptor() ([]byte, []int) {
	return file_v8platform_serialize_v1_infobases_proto_rawDescGZIP(), []int{0}
}

func (x *InfobaseInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *InfobaseInfo) GetDateOffset() int32 {
	if x != nil {
		return x.DateOffset
	}
	return 0
}

func (x *InfobaseInfo) GetDbms() string {
	if x != nil {
		return x.Dbms
	}
	return ""
}

func (x *InfobaseInfo) GetDbServer() string {
	if x != nil {
		return x.DbServer
	}
	return ""
}

func (x *InfobaseInfo) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *InfobaseInfo) GetDbUser() string {
	if x != nil {
		return x.DbUser
	}
	return ""
}

func (x *InfobaseInfo) GetDbPwd() string {
	if x != nil {
		return x.DbPwd
	}
	return ""
}

func (x *InfobaseInfo) GetDeniedFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DeniedFrom
	}
	return nil
}

func (x *InfobaseInfo) GetDeniedMessage() string {
	if x != nil {
		return x.DeniedMessage
	}
	return ""
}

func (x *InfobaseInfo) GetDeniedParameter() string {
	if x != nil {
		return x.DeniedParameter
	}
	return ""
}

func (x *InfobaseInfo) GetDeniedTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DeniedTo
	}
	return nil
}

func (x *InfobaseInfo) GetDescr() string {
	if x != nil {
		return x.Descr
	}
	return ""
}

func (x *InfobaseInfo) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *InfobaseInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InfobaseInfo) GetPermissionCode() string {
	if x != nil {
		return x.PermissionCode
	}
	return ""
}

func (x *InfobaseInfo) GetScheduledJobsDeny() bool {
	if x != nil {
		return x.ScheduledJobsDeny
	}
	return false
}

func (x *InfobaseInfo) GetSecurityLevel() int32 {
	if x != nil {
		return x.SecurityLevel
	}
	return 0
}

func (x *InfobaseInfo) GetSessionsDeny() bool {
	if x != nil {
		return x.SessionsDeny
	}
	return false
}

func (x *InfobaseInfo) GetLicenseDistribution() int32 {
	if x != nil {
		return x.LicenseDistribution
	}
	return 0
}

func (x *InfobaseInfo) GetExternalSessionManagerConnectionString() string {
	if x != nil {
		return x.ExternalSessionManagerConnectionString
	}
	return ""
}

func (x *InfobaseInfo) GetExternalSessionManagerRequired() bool {
	if x != nil {
		return x.ExternalSessionManagerRequired
	}
	return false
}

func (x *InfobaseInfo) GetSecurityProfileName() string {
	if x != nil {
		return x.SecurityProfileName
	}
	return ""
}

func (x *InfobaseInfo) GetSafeModeSecurityProfileName() string {
	if x != nil {
		return x.SafeModeSecurityProfileName
	}
	return ""
}

func (x *InfobaseInfo) GetReserveWorkingProcesses() bool {
	if x != nil {
		return x.ReserveWorkingProcesses
	}
	return false
}

type InfobaseSummaryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// all versions
	Uuid  string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Descr string `protobuf:"bytes,3,opt,name=descr,proto3" json:"descr,omitempty"`
	Name  string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *InfobaseSummaryInfo) Reset() {
	*x = InfobaseSummaryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v8platform_serialize_v1_infobases_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfobaseSummaryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfobaseSummaryInfo) ProtoMessage() {}

func (x *InfobaseSummaryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v8platform_serialize_v1_infobases_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfobaseSummaryInfo.ProtoReflect.Descriptor instead.
func (*InfobaseSummaryInfo) Descriptor() ([]byte, []int) {
	return file_v8platform_serialize_v1_infobases_proto_rawDescGZIP(), []int{1}
}

func (x *InfobaseSummaryInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *InfobaseSummaryInfo) GetDescr() string {
	if x != nil {
		return x.Descr
	}
	return ""
}

func (x *InfobaseSummaryInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_v8platform_serialize_v1_infobases_proto protoreflect.FileDescriptor

var file_v8platform_serialize_v1_infobases_proto_rawDesc = []byte{
	0x0a, 0x27, 0x76, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x62, 0x61,
	0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x76, 0x38, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x72, 0x61, 0x73, 0x2f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x2f, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfe, 0x09, 0x0a, 0x0c,
	0x49, 0x6e, 0x66, 0x6f, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x82, 0xf5, 0xea, 0x94,
	0x0e, 0x08, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x10, 0x01, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x29, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x02, 0x52,
	0x0a, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x64,
	0x62, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e,
	0x02, 0x10, 0x03, 0x52, 0x04, 0x64, 0x62, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x09, 0x64, 0x62, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5,
	0xea, 0x94, 0x0e, 0x02, 0x10, 0x04, 0x52, 0x08, 0x64, 0x62, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x21, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x05, 0x52, 0x06, 0x64, 0x62, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x06, 0x52, 0x06,
	0x64, 0x62, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x06, 0x64, 0x62, 0x5f, 0x70, 0x77, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x07,
	0x52, 0x05, 0x64, 0x62, 0x50, 0x77, 0x64, 0x12, 0x4b, 0x0a, 0x0b, 0x64, 0x65, 0x6e, 0x69, 0x65,
	0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0e, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x08,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x10, 0x08, 0x52, 0x0a, 0x64, 0x65, 0x6e, 0x69, 0x65, 0x64,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x2f, 0x0a, 0x0e, 0x64, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5,
	0xea, 0x94, 0x0e, 0x02, 0x10, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x10, 0x64, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x0a, 0x52, 0x0f, 0x64, 0x65, 0x6e, 0x69, 0x65,
	0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x09, 0x64, 0x65,
	0x6e, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0e, 0x82, 0xf5, 0xea, 0x94, 0x0e,
	0x08, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x10, 0x0b, 0x52, 0x08, 0x64, 0x65, 0x6e, 0x69, 0x65,
	0x64, 0x54, 0x6f, 0x12, 0x1e, 0x0a, 0x05, 0x64, 0x65, 0x73, 0x63, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x0c, 0x52, 0x05, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x12, 0x20, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x0d, 0x52, 0x06, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x0e, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5,
	0xea, 0x94, 0x0e, 0x02, 0x10, 0x0f, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x13, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x5f, 0x6a, 0x6f, 0x62, 0x73, 0x5f, 0x64, 0x65, 0x6e, 0x79, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x08, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x10, 0x52, 0x11, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4a, 0x6f, 0x62, 0x73, 0x44, 0x65, 0x6e, 0x79,
	0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02,
	0x10, 0x11, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x2d, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65,
	0x6e, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02,
	0x10, 0x12, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x6e, 0x79,
	0x12, 0x3b, 0x0a, 0x14, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08,
	0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x13, 0x52, 0x13, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x64, 0x0a,
	0x2a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x14, 0x52, 0x26, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x53, 0x0a, 0x21, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x42, 0x08,
	0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x15, 0x52, 0x1e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x13, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x16, 0x52,
	0x13, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x1b, 0x53, 0x61, 0x66, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e,
	0x02, 0x10, 0x17, 0x52, 0x1b, 0x53, 0x61, 0x66, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x44, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x0a, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x04, 0x10, 0x18, 0x18, 0x09, 0x52, 0x17, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x77, 0x0a, 0x13,
	0x49, 0x6e, 0x66, 0x6f, 0x62, 0x61, 0x73, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0e, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x08, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x10,
	0x01, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x05, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x02,
	0x52, 0x05, 0x64, 0x65, 0x73, 0x63, 0x72, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x03, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0xf1, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x38,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x49, 0x6e, 0x66, 0x6f, 0x62, 0x61, 0x73, 0x65, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x76, 0x38, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x2f, 0x76,
	0x31, 0x3b, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x56, 0x53, 0x58, 0xaa, 0x02, 0x17, 0x56, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x17,
	0x56, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5c, 0x53, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x23, 0x56, 0x38, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x5c, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x19,
	0x56, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_v8platform_serialize_v1_infobases_proto_rawDescOnce sync.Once
	file_v8platform_serialize_v1_infobases_proto_rawDescData = file_v8platform_serialize_v1_infobases_proto_rawDesc
)

func file_v8platform_serialize_v1_infobases_proto_rawDescGZIP() []byte {
	file_v8platform_serialize_v1_infobases_proto_rawDescOnce.Do(func() {
		file_v8platform_serialize_v1_infobases_proto_rawDescData = protoimpl.X.CompressGZIP(file_v8platform_serialize_v1_infobases_proto_rawDescData)
	})
	return file_v8platform_serialize_v1_infobases_proto_rawDescData
}

var file_v8platform_serialize_v1_infobases_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_v8platform_serialize_v1_infobases_proto_goTypes = []interface{}{
	(*InfobaseInfo)(nil),          // 0: v8platform.serialize.v1.InfobaseInfo
	(*InfobaseSummaryInfo)(nil),   // 1: v8platform.serialize.v1.InfobaseSummaryInfo
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_v8platform_serialize_v1_infobases_proto_depIdxs = []int32{
	2, // 0: v8platform.serialize.v1.InfobaseInfo.denied_from:type_name -> google.protobuf.Timestamp
	2, // 1: v8platform.serialize.v1.InfobaseInfo.denied_to:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_v8platform_serialize_v1_infobases_proto_init() }
func file_v8platform_serialize_v1_infobases_proto_init() {
	if File_v8platform_serialize_v1_infobases_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v8platform_serialize_v1_infobases_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfobaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v8platform_serialize_v1_infobases_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfobaseSummaryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v8platform_serialize_v1_infobases_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v8platform_serialize_v1_infobases_proto_goTypes,
		DependencyIndexes: file_v8platform_serialize_v1_infobases_proto_depIdxs,
		MessageInfos:      file_v8platform_serialize_v1_infobases_proto_msgTypes,
	}.Build()
	File_v8platform_serialize_v1_infobases_proto = out.File
	file_v8platform_serialize_v1_infobases_proto_rawDesc = nil
	file_v8platform_serialize_v1_infobases_proto_goTypes = nil
	file_v8platform_serialize_v1_infobases_proto_depIdxs = nil
}
