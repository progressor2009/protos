// Code generated by protoc-gen-go-ras. DO NOT EDIT.

// This is a compile-time assertion to ensure that this generated file
// is compatible with the v8platform/protoc-gen-go-ras ras it is being compiled against.

package serializev1

import (
	codec256 "github.com/v8platform/encoder/ras/codec256"
	io "io"
)

func (x *AssignmentInfo) Parse(reader io.Reader, version int32) error {
	if x == nil {
		return nil
	}
	// decode x.Uuid opts: encoder:"uuid"  order:1
	if err := codec256.ParseUUID(reader, &x.Uuid); err != nil {
		return err
	}
	// decode x.ObjectType opts: order:2
	if err := codec256.ParseString(reader, &x.ObjectType); err != nil {
		return err
	}
	// decode x.InfobaseName opts: order:3
	if err := codec256.ParseString(reader, &x.InfobaseName); err != nil {
		return err
	}
	// decode x.Type opts: order:4
	if err := codec256.ParseInt(reader, &x.Type); err != nil {
		return err
	}
	// decode x.ApplicationExt opts: order:5
	if err := codec256.ParseString(reader, &x.ApplicationExt); err != nil {
		return err
	}
	// decode x.Priority opts: order:6
	if err := codec256.ParseInt(reader, &x.Priority); err != nil {
		return err
	}
	return nil
}
func (x *AssignmentInfo) Formatter(writer io.Writer, version int32) error {
	if x == nil {
		return nil
	}
	// decode x.Uuid opts: encoder:"uuid"  order:1
	if err := codec256.FormatUuid(writer, x.Uuid); err != nil {
		return err
	}
	// decode x.ObjectType opts: order:2
	if err := codec256.FormatString(writer, x.ObjectType); err != nil {
		return err
	}
	// decode x.InfobaseName opts: order:3
	if err := codec256.FormatString(writer, x.InfobaseName); err != nil {
		return err
	}
	// decode x.Type opts: order:4
	if err := codec256.FormatInt(writer, x.Type); err != nil {
		return err
	}
	// decode x.ApplicationExt opts: order:5
	if err := codec256.FormatString(writer, x.ApplicationExt); err != nil {
		return err
	}
	// decode x.Priority opts: order:6
	if err := codec256.FormatInt(writer, x.Priority); err != nil {
		return err
	}
	return nil
}
