// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: v8platform/serialize/v1/processes.proto

package serializev1

import (
	_ "github.com/v8platform/protoc-gen-go-ras/plugin/ras/encoding"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProcessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid                string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	AvgBackCallTime     float64                `protobuf:"fixed64,2,opt,name=avg_back_call_time,json=avgBackCallTime,proto3" json:"avg_back_call_time,omitempty"`
	AvgCallTime         float64                `protobuf:"fixed64,3,opt,name=avg_call_time,json=avgCallTime,proto3" json:"avg_call_time,omitempty"`
	AvgDbCallTime       float64                `protobuf:"fixed64,4,opt,name=avg_db_call_time,json=avgDbCallTime,proto3" json:"avg_db_call_time,omitempty"`
	AvgLockCallTime     float64                `protobuf:"fixed64,5,opt,name=avg_lock_call_time,json=avgLockCallTime,proto3" json:"avg_lock_call_time,omitempty"`
	AvgServerCallTime   float64                `protobuf:"fixed64,6,opt,name=avg_server_call_time,json=avgServerCallTime,proto3" json:"avg_server_call_time,omitempty"`
	AvgThreads          float64                `protobuf:"fixed64,7,opt,name=avg_threads,json=avgThreads,proto3" json:"avg_threads,omitempty"`
	Capacity            int32                  `protobuf:"varint,8,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Connections         int32                  `protobuf:"varint,9,opt,name=connections,proto3" json:"connections,omitempty"`
	Host                string                 `protobuf:"bytes,10,opt,name=host,proto3" json:"host,omitempty"`
	Enable              bool                   `protobuf:"varint,11,opt,name=enable,proto3" json:"enable,omitempty"`
	Licenses            []*LicenseInfo         `protobuf:"bytes,12,rep,name=licenses,proto3" json:"licenses,omitempty"`
	Port                int32                  `protobuf:"varint,13,opt,name=port,proto3" json:"port,omitempty"`
	MemoryExcessTime    int32                  `protobuf:"varint,14,opt,name=memory_excess_time,json=memoryExcessTime,proto3" json:"memory_excess_time,omitempty"`
	MemorySize          int32                  `protobuf:"varint,15,opt,name=memory_size,json=memorySize,proto3" json:"memory_size,omitempty"`
	Pid                 string                 `protobuf:"bytes,16,opt,name=pid,proto3" json:"pid,omitempty"`
	Running             bool                   `protobuf:"varint,17,opt,name=running,proto3" json:"running,omitempty"`
	SelectionSize       int32                  `protobuf:"varint,18,opt,name=selection_size,json=selectionSize,proto3" json:"selection_size,omitempty"`
	StartedAt           *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	Use                 bool                   `protobuf:"varint,20,opt,name=use,proto3" json:"use,omitempty"`
	AvailablePerfomance int32                  `protobuf:"varint,21,opt,name=available_perfomance,json=availablePerfomance,proto3" json:"available_perfomance,omitempty"`
	Reverse             bool                   `protobuf:"varint,22,opt,name=reverse,proto3" json:"reverse,omitempty"`
}

func (x *ProcessInfo) Reset() {
	*x = ProcessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v8platform_serialize_v1_processes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInfo) ProtoMessage() {}

func (x *ProcessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v8platform_serialize_v1_processes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInfo.ProtoReflect.Descriptor instead.
func (*ProcessInfo) Descriptor() ([]byte, []int) {
	return file_v8platform_serialize_v1_processes_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ProcessInfo) GetAvgBackCallTime() float64 {
	if x != nil {
		return x.AvgBackCallTime
	}
	return 0
}

func (x *ProcessInfo) GetAvgCallTime() float64 {
	if x != nil {
		return x.AvgCallTime
	}
	return 0
}

func (x *ProcessInfo) GetAvgDbCallTime() float64 {
	if x != nil {
		return x.AvgDbCallTime
	}
	return 0
}

func (x *ProcessInfo) GetAvgLockCallTime() float64 {
	if x != nil {
		return x.AvgLockCallTime
	}
	return 0
}

func (x *ProcessInfo) GetAvgServerCallTime() float64 {
	if x != nil {
		return x.AvgServerCallTime
	}
	return 0
}

func (x *ProcessInfo) GetAvgThreads() float64 {
	if x != nil {
		return x.AvgThreads
	}
	return 0
}

func (x *ProcessInfo) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *ProcessInfo) GetConnections() int32 {
	if x != nil {
		return x.Connections
	}
	return 0
}

func (x *ProcessInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ProcessInfo) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *ProcessInfo) GetLicenses() []*LicenseInfo {
	if x != nil {
		return x.Licenses
	}
	return nil
}

func (x *ProcessInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ProcessInfo) GetMemoryExcessTime() int32 {
	if x != nil {
		return x.MemoryExcessTime
	}
	return 0
}

func (x *ProcessInfo) GetMemorySize() int32 {
	if x != nil {
		return x.MemorySize
	}
	return 0
}

func (x *ProcessInfo) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *ProcessInfo) GetRunning() bool {
	if x != nil {
		return x.Running
	}
	return false
}

func (x *ProcessInfo) GetSelectionSize() int32 {
	if x != nil {
		return x.SelectionSize
	}
	return 0
}

func (x *ProcessInfo) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *ProcessInfo) GetUse() bool {
	if x != nil {
		return x.Use
	}
	return false
}

func (x *ProcessInfo) GetAvailablePerfomance() int32 {
	if x != nil {
		return x.AvailablePerfomance
	}
	return 0
}

func (x *ProcessInfo) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

var File_v8platform_serialize_v1_processes_proto protoreflect.FileDescriptor

var file_v8platform_serialize_v1_processes_proto_rawDesc = []byte{
	0x0a, 0x27, 0x76, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x76, 0x38, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x72, 0x61, 0x73, 0x2f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x2f, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x76, 0x38, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x91, 0x08, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0e, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x08, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x10,
	0x01, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x12, 0x61, 0x76, 0x67, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x02, 0x52, 0x0f, 0x61,
	0x76, 0x67, 0x42, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x0d, 0x61, 0x76, 0x67, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x03, 0x52,
	0x0b, 0x61, 0x76, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x10,
	0x61, 0x76, 0x67, 0x5f, 0x64, 0x62, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x04,
	0x52, 0x0d, 0x61, 0x76, 0x67, 0x44, 0x62, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x35, 0x0a, 0x12, 0x61, 0x76, 0x67, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x42, 0x08, 0x82, 0xf5, 0xea,
	0x94, 0x0e, 0x02, 0x10, 0x05, 0x52, 0x0f, 0x61, 0x76, 0x67, 0x4c, 0x6f, 0x63, 0x6b, 0x43, 0x61,
	0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x14, 0x61, 0x76, 0x67, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x06, 0x52, 0x11,
	0x61, 0x76, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x76, 0x67, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x07,
	0x52, 0x0a, 0x61, 0x76, 0x67, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x08,
	0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08,
	0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x08, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5,
	0xea, 0x94, 0x0e, 0x02, 0x10, 0x0a, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x06,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x42, 0x08, 0x82, 0xf5,
	0xea, 0x94, 0x0e, 0x02, 0x10, 0x0b, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x4a,
	0x0a, 0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x76, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x0c,
	0x52, 0x08, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0f, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x09,
	0x0a, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x10, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x36, 0x0a, 0x12, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xf5, 0xea,
	0x94, 0x0e, 0x02, 0x10, 0x0e, 0x52, 0x10, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x45, 0x78, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xf5,
	0xea, 0x94, 0x0e, 0x02, 0x10, 0x0f, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x10, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x27,
	0x0a, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x42,
	0x0d, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x07, 0x0a, 0x03, 0x69, 0x6e, 0x74, 0x10, 0x11, 0x52, 0x07,
	0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x12, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0e, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x08,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x10, 0x12, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x75, 0x73, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x0d, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x07, 0x0a, 0x03, 0x69, 0x6e, 0x74, 0x10, 0x14, 0x52,
	0x03, 0x75, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x14, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x15, 0x52, 0x13, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x24, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x0a, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x04, 0x10, 0x16, 0x18, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x42, 0xf1, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e,
	0x76, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x76, 0x38, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x2f, 0x76, 0x31, 0x3b, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x56, 0x53, 0x58, 0xaa, 0x02, 0x17, 0x56, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x17, 0x56, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5c, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x23, 0x56, 0x38, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5c, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x19, 0x56, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x3a, 0x53, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_v8platform_serialize_v1_processes_proto_rawDescOnce sync.Once
	file_v8platform_serialize_v1_processes_proto_rawDescData = file_v8platform_serialize_v1_processes_proto_rawDesc
)

func file_v8platform_serialize_v1_processes_proto_rawDescGZIP() []byte {
	file_v8platform_serialize_v1_processes_proto_rawDescOnce.Do(func() {
		file_v8platform_serialize_v1_processes_proto_rawDescData = protoimpl.X.CompressGZIP(file_v8platform_serialize_v1_processes_proto_rawDescData)
	})
	return file_v8platform_serialize_v1_processes_proto_rawDescData
}

var file_v8platform_serialize_v1_processes_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_v8platform_serialize_v1_processes_proto_goTypes = []interface{}{
	(*ProcessInfo)(nil),           // 0: v8platform.serialize.v1.ProcessInfo
	(*LicenseInfo)(nil),           // 1: v8platform.serialize.v1.LicenseInfo
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_v8platform_serialize_v1_processes_proto_depIdxs = []int32{
	1, // 0: v8platform.serialize.v1.ProcessInfo.licenses:type_name -> v8platform.serialize.v1.LicenseInfo
	2, // 1: v8platform.serialize.v1.ProcessInfo.started_at:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_v8platform_serialize_v1_processes_proto_init() }
func file_v8platform_serialize_v1_processes_proto_init() {
	if File_v8platform_serialize_v1_processes_proto != nil {
		return
	}
	file_v8platform_serialize_v1_licanses_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v8platform_serialize_v1_processes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v8platform_serialize_v1_processes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v8platform_serialize_v1_processes_proto_goTypes,
		DependencyIndexes: file_v8platform_serialize_v1_processes_proto_depIdxs,
		MessageInfos:      file_v8platform_serialize_v1_processes_proto_msgTypes,
	}.Build()
	File_v8platform_serialize_v1_processes_proto = out.File
	file_v8platform_serialize_v1_processes_proto_rawDesc = nil
	file_v8platform_serialize_v1_processes_proto_goTypes = nil
	file_v8platform_serialize_v1_processes_proto_depIdxs = nil
}
