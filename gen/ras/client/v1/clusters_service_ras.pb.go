// Code generated by protoc-gen-go-ras. DO NOT EDIT.

// This is a compile-time assertion to ensure that this generated file
// is compatible with the v8platform/protoc-gen-go-ras ras it is being compiled against.

package clientv1

import (
	v1 "github.com/v8platform/protos/gen/ras/messages/v1"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

type ClustersServiceImpl interface {
	GetClusters(*v1.GetClustersRequest) (*v1.GetClustersResponse, error)
	GetClusterInfo(*v1.GetClusterInfoRequest) (*v1.GetClusterInfoResponse, error)
	RegCluster(*v1.RegClusterRequest) (*v1.RegClusterResponse, error)
	UnregCluster(*v1.UnregClusterRequest) (*emptypb.Empty, error)
}

func NewClustersService(endpointService EndpointServiceImpl) ClustersServiceImpl {
	return &ClustersService{
		endpointService,
	}
}

// ClustersService is the endpoint message service for RAS service.
type ClustersService struct {
	e EndpointServiceImpl
}

func (x *ClustersService) GetClusters(req *v1.GetClustersRequest) (*v1.GetClustersResponse, error) {
	var resp v1.GetClustersResponse
	if err := x.e.Request(req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}
func (x *ClustersService) GetClusterInfo(req *v1.GetClusterInfoRequest) (*v1.GetClusterInfoResponse, error) {
	var resp v1.GetClusterInfoResponse
	if err := x.e.Request(req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}
func (x *ClustersService) RegCluster(req *v1.RegClusterRequest) (*v1.RegClusterResponse, error) {
	var resp v1.RegClusterResponse
	if err := x.e.Request(req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}
func (x *ClustersService) UnregCluster(req *v1.UnregClusterRequest) (*emptypb.Empty, error) {
	var resp emptypb.Empty
	if err := x.e.Request(req, nil); err != nil {
		return nil, err
	}
	return &resp, nil
}
