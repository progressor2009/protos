// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: ras/client/v1/client.proto

package clientv1

import (
	protocol "github.com/v8platform/protos/gen/ras/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host        string           `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Lazy        *LazyInitOptions `protobuf:"bytes,2,opt,name=lazy,proto3" json:"lazy,omitempty"`
	IdleTimeout int32            `protobuf:"varint,3,opt,name=idle_timeout,json=idleTimeout,proto3" json:"idle_timeout,omitempty"`
}

func (x *InitRequest) Reset() {
	*x = InitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_client_v1_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest) ProtoMessage() {}

func (x *InitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ras_client_v1_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest.ProtoReflect.Descriptor instead.
func (*InitRequest) Descriptor() ([]byte, []int) {
	return file_ras_client_v1_client_proto_rawDescGZIP(), []int{0}
}

func (x *InitRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *InitRequest) GetLazy() *LazyInitOptions {
	if x != nil {
		return x.Lazy
	}
	return nil
}

func (x *InitRequest) GetIdleTimeout() int32 {
	if x != nil {
		return x.IdleTimeout
	}
	return 0
}

type NewEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*NewEndpointRequest_Auto
	//	*NewEndpointRequest_Options
	//	*NewEndpointRequest_Open
	Request isNewEndpointRequest_Request `protobuf_oneof:"request"`
}

func (x *NewEndpointRequest) Reset() {
	*x = NewEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_client_v1_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewEndpointRequest) ProtoMessage() {}

func (x *NewEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ras_client_v1_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewEndpointRequest.ProtoReflect.Descriptor instead.
func (*NewEndpointRequest) Descriptor() ([]byte, []int) {
	return file_ras_client_v1_client_proto_rawDescGZIP(), []int{1}
}

func (m *NewEndpointRequest) GetRequest() isNewEndpointRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *NewEndpointRequest) GetAuto() *emptypb.Empty {
	if x, ok := x.GetRequest().(*NewEndpointRequest_Auto); ok {
		return x.Auto
	}
	return nil
}

func (x *NewEndpointRequest) GetOptions() *NewEndpointRequest_EndpointOptions {
	if x, ok := x.GetRequest().(*NewEndpointRequest_Options); ok {
		return x.Options
	}
	return nil
}

func (x *NewEndpointRequest) GetOpen() *protocol.EndpointOpen {
	if x, ok := x.GetRequest().(*NewEndpointRequest_Open); ok {
		return x.Open
	}
	return nil
}

type isNewEndpointRequest_Request interface {
	isNewEndpointRequest_Request()
}

type NewEndpointRequest_Auto struct {
	Auto *emptypb.Empty `protobuf:"bytes,1,opt,name=auto,proto3,oneof"`
}

type NewEndpointRequest_Options struct {
	Options *NewEndpointRequest_EndpointOptions `protobuf:"bytes,2,opt,name=options,proto3,oneof"`
}

type NewEndpointRequest_Open struct {
	Open *protocol.EndpointOpen `protobuf:"bytes,3,opt,name=open,proto3,oneof"`
}

func (*NewEndpointRequest_Auto) isNewEndpointRequest_Request() {}

func (*NewEndpointRequest_Options) isNewEndpointRequest_Request() {}

func (*NewEndpointRequest_Open) isNewEndpointRequest_Request() {}

type StatusInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connected      bool                   `protobuf:"varint,1,opt,name=connected,proto3" json:"connected,omitempty"`
	Ready          bool                   `protobuf:"varint,2,opt,name=ready,proto3" json:"ready,omitempty"`
	ServiceVersion int32                  `protobuf:"varint,4,opt,name=service_version,json=serviceVersion,proto3" json:"service_version,omitempty"`
	Endpoints      []*protocol.Endpoint   `protobuf:"bytes,5,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	LastUsed       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_used,json=lastUsed,proto3" json:"last_used,omitempty"`
	PacketStat     *PacketStat            `protobuf:"bytes,7,opt,name=packet_stat,json=packetStat,proto3" json:"packet_stat,omitempty"`
}

func (x *StatusInfo) Reset() {
	*x = StatusInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_client_v1_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusInfo) ProtoMessage() {}

func (x *StatusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ras_client_v1_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusInfo.ProtoReflect.Descriptor instead.
func (*StatusInfo) Descriptor() ([]byte, []int) {
	return file_ras_client_v1_client_proto_rawDescGZIP(), []int{2}
}

func (x *StatusInfo) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *StatusInfo) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *StatusInfo) GetServiceVersion() int32 {
	if x != nil {
		return x.ServiceVersion
	}
	return 0
}

func (x *StatusInfo) GetEndpoints() []*protocol.Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *StatusInfo) GetLastUsed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsed
	}
	return nil
}

func (x *StatusInfo) GetPacketStat() *PacketStat {
	if x != nil {
		return x.PacketStat
	}
	return nil
}

type PacketStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recv  int32 `protobuf:"varint,1,opt,name=recv,proto3" json:"recv,omitempty"`
	Send  int32 `protobuf:"varint,2,opt,name=send,proto3" json:"send,omitempty"`
	Wrong int32 `protobuf:"varint,3,opt,name=wrong,proto3" json:"wrong,omitempty"`
}

func (x *PacketStat) Reset() {
	*x = PacketStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_client_v1_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketStat) ProtoMessage() {}

func (x *PacketStat) ProtoReflect() protoreflect.Message {
	mi := &file_ras_client_v1_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketStat.ProtoReflect.Descriptor instead.
func (*PacketStat) Descriptor() ([]byte, []int) {
	return file_ras_client_v1_client_proto_rawDescGZIP(), []int{3}
}

func (x *PacketStat) GetRecv() int32 {
	if x != nil {
		return x.Recv
	}
	return 0
}

func (x *PacketStat) GetSend() int32 {
	if x != nil {
		return x.Send
	}
	return 0
}

func (x *PacketStat) GetWrong() int32 {
	if x != nil {
		return x.Wrong
	}
	return 0
}

type LazyInitOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Negotiate    *protocol.NegotiateMessage `protobuf:"bytes,1,opt,name=negotiate,proto3" json:"negotiate,omitempty"`
	Connect      *protocol.ConnectMessage   `protobuf:"bytes,2,opt,name=connect,proto3" json:"connect,omitempty"`
	OpenEndpoint *protocol.EndpointOpen     `protobuf:"bytes,3,opt,name=open_endpoint,json=openEndpoint,proto3,oneof" json:"open_endpoint,omitempty"`
}

func (x *LazyInitOptions) Reset() {
	*x = LazyInitOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_client_v1_client_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LazyInitOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LazyInitOptions) ProtoMessage() {}

func (x *LazyInitOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ras_client_v1_client_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LazyInitOptions.ProtoReflect.Descriptor instead.
func (*LazyInitOptions) Descriptor() ([]byte, []int) {
	return file_ras_client_v1_client_proto_rawDescGZIP(), []int{4}
}

func (x *LazyInitOptions) GetNegotiate() *protocol.NegotiateMessage {
	if x != nil {
		return x.Negotiate
	}
	return nil
}

func (x *LazyInitOptions) GetConnect() *protocol.ConnectMessage {
	if x != nil {
		return x.Connect
	}
	return nil
}

func (x *LazyInitOptions) GetOpenEndpoint() *protocol.EndpointOpen {
	if x != nil {
		return x.OpenEndpoint
	}
	return nil
}

type EndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Format  int32      `protobuf:"varint,2,opt,name=format,proto3" json:"format,omitempty"`
	Version int32      `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Value   *anypb.Any `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EndpointRequest) Reset() {
	*x = EndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_client_v1_client_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointRequest) ProtoMessage() {}

func (x *EndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ras_client_v1_client_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointRequest.ProtoReflect.Descriptor instead.
func (*EndpointRequest) Descriptor() ([]byte, []int) {
	return file_ras_client_v1_client_proto_rawDescGZIP(), []int{5}
}

func (x *EndpointRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EndpointRequest) GetFormat() int32 {
	if x != nil {
		return x.Format
	}
	return 0
}

func (x *EndpointRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *EndpointRequest) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

type EndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Format  int32      `protobuf:"varint,2,opt,name=format,proto3" json:"format,omitempty"`
	Version int32      `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Value   *anypb.Any `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EndpointResponse) Reset() {
	*x = EndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_client_v1_client_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointResponse) ProtoMessage() {}

func (x *EndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ras_client_v1_client_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointResponse.ProtoReflect.Descriptor instead.
func (*EndpointResponse) Descriptor() ([]byte, []int) {
	return file_ras_client_v1_client_proto_rawDescGZIP(), []int{6}
}

func (x *EndpointResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EndpointResponse) GetFormat() int32 {
	if x != nil {
		return x.Format
	}
	return 0
}

func (x *EndpointResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *EndpointResponse) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

type NewEndpointRequest_EndpointOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service *string `protobuf:"bytes,1,opt,name=service,proto3,oneof" json:"service,omitempty"`
	Version *int32  `protobuf:"varint,2,opt,name=version,proto3,oneof" json:"version,omitempty"`
}

func (x *NewEndpointRequest_EndpointOptions) Reset() {
	*x = NewEndpointRequest_EndpointOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_client_v1_client_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewEndpointRequest_EndpointOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewEndpointRequest_EndpointOptions) ProtoMessage() {}

func (x *NewEndpointRequest_EndpointOptions) ProtoReflect() protoreflect.Message {
	mi := &file_ras_client_v1_client_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewEndpointRequest_EndpointOptions.ProtoReflect.Descriptor instead.
func (*NewEndpointRequest_EndpointOptions) Descriptor() ([]byte, []int) {
	return file_ras_client_v1_client_proto_rawDescGZIP(), []int{1, 0}
}

func (x *NewEndpointRequest_EndpointOptions) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

func (x *NewEndpointRequest_EndpointOptions) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

var File_ras_client_v1_client_proto protoreflect.FileDescriptor

var file_ras_client_v1_client_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x72, 0x61, 0x73, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x72, 0x61,
	0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x72, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x72, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x72, 0x61, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x78, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x6c,
	0x61, 0x7a, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x61, 0x73, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x7a, 0x79, 0x49, 0x6e,
	0x69, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x6c, 0x61, 0x7a, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x22, 0xb7, 0x02, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48,
	0x00, 0x52, 0x04, 0x61, 0x75, 0x74, 0x6f, 0x12, 0x4d, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x6e,
	0x48, 0x00, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x1a, 0x67, 0x0a, 0x0f, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9a, 0x02, 0x0a,
	0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x61,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x37,
	0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x55, 0x73, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72,
	0x61, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0x4a, 0x0a, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x63, 0x76, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x65, 0x63, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x77, 0x72, 0x6f, 0x6e, 0x67, 0x22, 0xdf, 0x01, 0x0a, 0x0f, 0x4c, 0x61, 0x7a, 0x79, 0x49, 0x6e,
	0x69, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x6e, 0x65, 0x67,
	0x6f, 0x74, 0x69, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72,
	0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x65, 0x67, 0x6f,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x09, 0x6e, 0x65,
	0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12,
	0x44, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70,
	0x65, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x7f, 0x0a, 0x0f, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x10, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x81, 0x07, 0x0a, 0x0d,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a,
	0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x1a, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x3d,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x19, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x4a, 0x0a,
	0x0b, 0x4e, 0x65, 0x77, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x72,
	0x61, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x72, 0x61, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x08,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12,
	0x4c, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x72, 0x61, 0x73,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x61, 0x73,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x09, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x72, 0x61, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x65, 0x67, 0x6f, 0x74, 0x69,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x4a, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x2e,
	0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1f, 0x2e, 0x72, 0x61,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x47,
	0x0a, 0x0a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x2e, 0x72,
	0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1a, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4f,
	0x70, 0x65, 0x6e, 0x1a, 0x1d, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x41,
	0x63, 0x6b, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x1b, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0f,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1d,
	0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x42,
	0xaf, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x76, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x72, 0x61, 0x73, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x52, 0x43, 0x58, 0xaa, 0x02, 0x0d, 0x52, 0x61, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x52, 0x61, 0x73, 0x5c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x52, 0x61, 0x73, 0x5c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0f, 0x52, 0x61, 0x73, 0x3a, 0x3a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ras_client_v1_client_proto_rawDescOnce sync.Once
	file_ras_client_v1_client_proto_rawDescData = file_ras_client_v1_client_proto_rawDesc
)

func file_ras_client_v1_client_proto_rawDescGZIP() []byte {
	file_ras_client_v1_client_proto_rawDescOnce.Do(func() {
		file_ras_client_v1_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_ras_client_v1_client_proto_rawDescData)
	})
	return file_ras_client_v1_client_proto_rawDescData
}

var file_ras_client_v1_client_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_ras_client_v1_client_proto_goTypes = []interface{}{
	(*InitRequest)(nil),                        // 0: ras.client.v1.InitRequest
	(*NewEndpointRequest)(nil),                 // 1: ras.client.v1.NewEndpointRequest
	(*StatusInfo)(nil),                         // 2: ras.client.v1.StatusInfo
	(*PacketStat)(nil),                         // 3: ras.client.v1.PacketStat
	(*LazyInitOptions)(nil),                    // 4: ras.client.v1.LazyInitOptions
	(*EndpointRequest)(nil),                    // 5: ras.client.v1.EndpointRequest
	(*EndpointResponse)(nil),                   // 6: ras.client.v1.EndpointResponse
	(*NewEndpointRequest_EndpointOptions)(nil), // 7: ras.client.v1.NewEndpointRequest.EndpointOptions
	(*emptypb.Empty)(nil),                      // 8: google.protobuf.Empty
	(*protocol.EndpointOpen)(nil),              // 9: ras.protocol.EndpointOpen
	(*protocol.Endpoint)(nil),                  // 10: ras.protocol.Endpoint
	(*timestamppb.Timestamp)(nil),              // 11: google.protobuf.Timestamp
	(*protocol.NegotiateMessage)(nil),          // 12: ras.protocol.NegotiateMessage
	(*protocol.ConnectMessage)(nil),            // 13: ras.protocol.ConnectMessage
	(*anypb.Any)(nil),                          // 14: google.protobuf.Any
	(*protocol.DisconnectMessage)(nil),         // 15: ras.protocol.DisconnectMessage
	(*protocol.EndpointClose)(nil),             // 16: ras.protocol.EndpointClose
	(*protocol.EndpointMessage)(nil),           // 17: ras.protocol.EndpointMessage
	(*protocol.ConnectMessageAck)(nil),         // 18: ras.protocol.ConnectMessageAck
	(*protocol.EndpointOpenAck)(nil),           // 19: ras.protocol.EndpointOpenAck
}
var file_ras_client_v1_client_proto_depIdxs = []int32{
	4,  // 0: ras.client.v1.InitRequest.lazy:type_name -> ras.client.v1.LazyInitOptions
	8,  // 1: ras.client.v1.NewEndpointRequest.auto:type_name -> google.protobuf.Empty
	7,  // 2: ras.client.v1.NewEndpointRequest.options:type_name -> ras.client.v1.NewEndpointRequest.EndpointOptions
	9,  // 3: ras.client.v1.NewEndpointRequest.open:type_name -> ras.protocol.EndpointOpen
	10, // 4: ras.client.v1.StatusInfo.endpoints:type_name -> ras.protocol.Endpoint
	11, // 5: ras.client.v1.StatusInfo.last_used:type_name -> google.protobuf.Timestamp
	3,  // 6: ras.client.v1.StatusInfo.packet_stat:type_name -> ras.client.v1.PacketStat
	12, // 7: ras.client.v1.LazyInitOptions.negotiate:type_name -> ras.protocol.NegotiateMessage
	13, // 8: ras.client.v1.LazyInitOptions.connect:type_name -> ras.protocol.ConnectMessage
	9,  // 9: ras.client.v1.LazyInitOptions.open_endpoint:type_name -> ras.protocol.EndpointOpen
	14, // 10: ras.client.v1.EndpointRequest.value:type_name -> google.protobuf.Any
	14, // 11: ras.client.v1.EndpointResponse.value:type_name -> google.protobuf.Any
	0,  // 12: ras.client.v1.ClientService.Init:input_type -> ras.client.v1.InitRequest
	8,  // 13: ras.client.v1.ClientService.Status:input_type -> google.protobuf.Empty
	1,  // 14: ras.client.v1.ClientService.NewEndpoint:input_type -> ras.client.v1.NewEndpointRequest
	10, // 15: ras.client.v1.ClientService.CloseEndpoint:input_type -> ras.protocol.Endpoint
	5,  // 16: ras.client.v1.ClientService.Requests:input_type -> ras.client.v1.EndpointRequest
	5,  // 17: ras.client.v1.ClientService.Request:input_type -> ras.client.v1.EndpointRequest
	12, // 18: ras.client.v1.ClientService.Negotiate:input_type -> ras.protocol.NegotiateMessage
	13, // 19: ras.client.v1.ClientService.Connect:input_type -> ras.protocol.ConnectMessage
	15, // 20: ras.client.v1.ClientService.Disconnect:input_type -> ras.protocol.DisconnectMessage
	9,  // 21: ras.client.v1.ClientService.EndpointOpen:input_type -> ras.protocol.EndpointOpen
	16, // 22: ras.client.v1.ClientService.EndpointClose:input_type -> ras.protocol.EndpointClose
	17, // 23: ras.client.v1.ClientService.EndpointMessage:input_type -> ras.protocol.EndpointMessage
	2,  // 24: ras.client.v1.ClientService.Init:output_type -> ras.client.v1.StatusInfo
	2,  // 25: ras.client.v1.ClientService.Status:output_type -> ras.client.v1.StatusInfo
	10, // 26: ras.client.v1.ClientService.NewEndpoint:output_type -> ras.protocol.Endpoint
	8,  // 27: ras.client.v1.ClientService.CloseEndpoint:output_type -> google.protobuf.Empty
	6,  // 28: ras.client.v1.ClientService.Requests:output_type -> ras.client.v1.EndpointResponse
	6,  // 29: ras.client.v1.ClientService.Request:output_type -> ras.client.v1.EndpointResponse
	8,  // 30: ras.client.v1.ClientService.Negotiate:output_type -> google.protobuf.Empty
	18, // 31: ras.client.v1.ClientService.Connect:output_type -> ras.protocol.ConnectMessageAck
	8,  // 32: ras.client.v1.ClientService.Disconnect:output_type -> google.protobuf.Empty
	19, // 33: ras.client.v1.ClientService.EndpointOpen:output_type -> ras.protocol.EndpointOpenAck
	8,  // 34: ras.client.v1.ClientService.EndpointClose:output_type -> google.protobuf.Empty
	17, // 35: ras.client.v1.ClientService.EndpointMessage:output_type -> ras.protocol.EndpointMessage
	24, // [24:36] is the sub-list for method output_type
	12, // [12:24] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_ras_client_v1_client_proto_init() }
func file_ras_client_v1_client_proto_init() {
	if File_ras_client_v1_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ras_client_v1_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ras_client_v1_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ras_client_v1_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ras_client_v1_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ras_client_v1_client_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LazyInitOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ras_client_v1_client_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ras_client_v1_client_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ras_client_v1_client_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewEndpointRequest_EndpointOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ras_client_v1_client_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*NewEndpointRequest_Auto)(nil),
		(*NewEndpointRequest_Options)(nil),
		(*NewEndpointRequest_Open)(nil),
	}
	file_ras_client_v1_client_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_ras_client_v1_client_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ras_client_v1_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ras_client_v1_client_proto_goTypes,
		DependencyIndexes: file_ras_client_v1_client_proto_depIdxs,
		MessageInfos:      file_ras_client_v1_client_proto_msgTypes,
	}.Build()
	File_ras_client_v1_client_proto = out.File
	file_ras_client_v1_client_proto_rawDesc = nil
	file_ras_client_v1_client_proto_goTypes = nil
	file_ras_client_v1_client_proto_depIdxs = nil
}
