// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: ras/protocol/v1/endpoint.proto

package protocolv1

import (
	_ "github.com/v8platform/protoc-gen-go-ras/plugin/ras/encoding"
	v1 "github.com/v8platform/protos/gen/ras/messages/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	_ "google.golang.org/protobuf/types/known/typepb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EndpointOpen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service string            `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Version string            `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Params  map[string]*Param `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EndpointOpen) Reset() {
	*x = EndpointOpen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointOpen) ProtoMessage() {}

func (x *EndpointOpen) ProtoReflect() protoreflect.Message {
	mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointOpen.ProtoReflect.Descriptor instead.
func (*EndpointOpen) Descriptor() ([]byte, []int) {
	return file_ras_protocol_v1_endpoint_proto_rawDescGZIP(), []int{0}
}

func (x *EndpointOpen) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *EndpointOpen) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *EndpointOpen) GetParams() map[string]*Param {
	if x != nil {
		return x.Params
	}
	return nil
}

type EndpointOpenAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service    string            `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Version    string            `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	EndpointId int32             `protobuf:"varint,3,opt,name=endpoint_id,json=endpointId,proto3" json:"endpoint_id,omitempty"`
	Params     map[string]*Param `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EndpointOpenAck) Reset() {
	*x = EndpointOpenAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointOpenAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointOpenAck) ProtoMessage() {}

func (x *EndpointOpenAck) ProtoReflect() protoreflect.Message {
	mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointOpenAck.ProtoReflect.Descriptor instead.
func (*EndpointOpenAck) Descriptor() ([]byte, []int) {
	return file_ras_protocol_v1_endpoint_proto_rawDescGZIP(), []int{1}
}

func (x *EndpointOpenAck) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *EndpointOpenAck) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *EndpointOpenAck) GetEndpointId() int32 {
	if x != nil {
		return x.EndpointId
	}
	return 0
}

func (x *EndpointOpenAck) GetParams() map[string]*Param {
	if x != nil {
		return x.Params
	}
	return nil
}

type EndpointClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndpointId int32 `protobuf:"varint,1,opt,name=endpoint_id,json=endpointId,proto3" json:"endpoint_id,omitempty"`
}

func (x *EndpointClose) Reset() {
	*x = EndpointClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointClose) ProtoMessage() {}

func (x *EndpointClose) ProtoReflect() protoreflect.Message {
	mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointClose.ProtoReflect.Descriptor instead.
func (*EndpointClose) Descriptor() ([]byte, []int) {
	return file_ras_protocol_v1_endpoint_proto_rawDescGZIP(), []int{2}
}

func (x *EndpointClose) GetEndpointId() int32 {
	if x != nil {
		return x.EndpointId
	}
	return 0
}

type EndpointMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndpointId int32            `protobuf:"varint,1,opt,name=endpoint_id,json=endpointId,proto3" json:"endpoint_id,omitempty"`
	Format     int32            `protobuf:"varint,2,opt,name=format,proto3" json:"format,omitempty"`
	Type       EndpointDataType `protobuf:"varint,3,opt,name=type,proto3,enum=ras.protocol.v1.EndpointDataType" json:"type,omitempty"`
	// Types that are assignable to Data:
	//	*EndpointMessage_VoidMessage
	//	*EndpointMessage_Message
	//	*EndpointMessage_Failure
	Data isEndpointMessage_Data `protobuf_oneof:"data"`
}

func (x *EndpointMessage) Reset() {
	*x = EndpointMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointMessage) ProtoMessage() {}

func (x *EndpointMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointMessage.ProtoReflect.Descriptor instead.
func (*EndpointMessage) Descriptor() ([]byte, []int) {
	return file_ras_protocol_v1_endpoint_proto_rawDescGZIP(), []int{3}
}

func (x *EndpointMessage) GetEndpointId() int32 {
	if x != nil {
		return x.EndpointId
	}
	return 0
}

func (x *EndpointMessage) GetFormat() int32 {
	if x != nil {
		return x.Format
	}
	return 0
}

func (x *EndpointMessage) GetType() EndpointDataType {
	if x != nil {
		return x.Type
	}
	return EndpointDataType_ENDPOINT_DATA_TYPE_VOID_MESSAGE
}

func (m *EndpointMessage) GetData() isEndpointMessage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *EndpointMessage) GetVoidMessage() *EndpointDataVoidMessage {
	if x, ok := x.GetData().(*EndpointMessage_VoidMessage); ok {
		return x.VoidMessage
	}
	return nil
}

func (x *EndpointMessage) GetMessage() *EndpointDataMessage {
	if x, ok := x.GetData().(*EndpointMessage_Message); ok {
		return x.Message
	}
	return nil
}

func (x *EndpointMessage) GetFailure() *EndpointFailureMessage {
	if x, ok := x.GetData().(*EndpointMessage_Failure); ok {
		return x.Failure
	}
	return nil
}

type isEndpointMessage_Data interface {
	isEndpointMessage_Data()
}

type EndpointMessage_VoidMessage struct {
	VoidMessage *EndpointDataVoidMessage `protobuf:"bytes,4,opt,name=void_message,json=voidMessage,proto3,oneof"`
}

type EndpointMessage_Message struct {
	Message *EndpointDataMessage `protobuf:"bytes,5,opt,name=message,proto3,oneof"`
}

type EndpointMessage_Failure struct {
	Failure *EndpointFailureMessage `protobuf:"bytes,6,opt,name=failure,proto3,oneof"`
}

func (*EndpointMessage_VoidMessage) isEndpointMessage_Data() {}

func (*EndpointMessage_Message) isEndpointMessage_Data() {}

func (*EndpointMessage_Failure) isEndpointMessage_Data() {}

type EndpointFailureAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId  string      `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Version    string      `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	EndpointId int32       `protobuf:"varint,3,opt,name=endpoint_id,json=endpointId,proto3" json:"endpoint_id,omitempty"`
	ClassCause string      `protobuf:"bytes,4,opt,name=class_cause,json=classCause,proto3" json:"class_cause,omitempty"`
	Message    string      `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Trace      []string    `protobuf:"bytes,6,rep,name=trace,proto3" json:"trace,omitempty"`
	Cause      *CauseError `protobuf:"bytes,7,opt,name=cause,proto3" json:"cause,omitempty"`
}

func (x *EndpointFailureAck) Reset() {
	*x = EndpointFailureAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointFailureAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointFailureAck) ProtoMessage() {}

func (x *EndpointFailureAck) ProtoReflect() protoreflect.Message {
	mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointFailureAck.ProtoReflect.Descriptor instead.
func (*EndpointFailureAck) Descriptor() ([]byte, []int) {
	return file_ras_protocol_v1_endpoint_proto_rawDescGZIP(), []int{4}
}

func (x *EndpointFailureAck) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *EndpointFailureAck) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *EndpointFailureAck) GetEndpointId() int32 {
	if x != nil {
		return x.EndpointId
	}
	return 0
}

func (x *EndpointFailureAck) GetClassCause() string {
	if x != nil {
		return x.ClassCause
	}
	return ""
}

func (x *EndpointFailureAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EndpointFailureAck) GetTrace() []string {
	if x != nil {
		return x.Trace
	}
	return nil
}

func (x *EndpointFailureAck) GetCause() *CauseError {
	if x != nil {
		return x.Cause
	}
	return nil
}

type CauseError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CauseError) Reset() {
	*x = CauseError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CauseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CauseError) ProtoMessage() {}

func (x *CauseError) ProtoReflect() protoreflect.Message {
	mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CauseError.ProtoReflect.Descriptor instead.
func (*CauseError) Descriptor() ([]byte, []int) {
	return file_ras_protocol_v1_endpoint_proto_rawDescGZIP(), []int{5}
}

func (x *CauseError) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *CauseError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EndpointDataVoidMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EndpointDataVoidMessage) Reset() {
	*x = EndpointDataVoidMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointDataVoidMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointDataVoidMessage) ProtoMessage() {}

func (x *EndpointDataVoidMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointDataVoidMessage.ProtoReflect.Descriptor instead.
func (*EndpointDataVoidMessage) Descriptor() ([]byte, []int) {
	return file_ras_protocol_v1_endpoint_proto_rawDescGZIP(), []int{6}
}

type EndpointDataMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  v1.MessageType `protobuf:"varint,1,opt,name=type,proto3,enum=ras.messages.v1.MessageType" json:"type,omitempty"`
	Bytes []byte         `protobuf:"bytes,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *EndpointDataMessage) Reset() {
	*x = EndpointDataMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointDataMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointDataMessage) ProtoMessage() {}

func (x *EndpointDataMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointDataMessage.ProtoReflect.Descriptor instead.
func (*EndpointDataMessage) Descriptor() ([]byte, []int) {
	return file_ras_protocol_v1_endpoint_proto_rawDescGZIP(), []int{7}
}

func (x *EndpointDataMessage) GetType() v1.MessageType {
	if x != nil {
		return x.Type
	}
	return v1.MessageType(0)
}

func (x *EndpointDataMessage) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type EndpointFailureMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string      `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Message   string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Cause     *CauseError `protobuf:"bytes,3,opt,name=cause,proto3" json:"cause,omitempty"`
}

func (x *EndpointFailureMessage) Reset() {
	*x = EndpointFailureMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointFailureMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointFailureMessage) ProtoMessage() {}

func (x *EndpointFailureMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ras_protocol_v1_endpoint_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointFailureMessage.ProtoReflect.Descriptor instead.
func (*EndpointFailureMessage) Descriptor() ([]byte, []int) {
	return file_ras_protocol_v1_endpoint_proto_rawDescGZIP(), []int{8}
}

func (x *EndpointFailureMessage) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *EndpointFailureMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EndpointFailureMessage) GetCause() *CauseError {
	if x != nil {
		return x.Cause
	}
	return nil
}

var File_ras_protocol_v1_endpoint_proto protoreflect.FileDescriptor

var file_ras_protocol_v1_endpoint_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x72, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x1a, 0x1b, 0x72, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16,
	0x72, 0x61, 0x73, 0x2f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x72, 0x61, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x72, 0x61, 0x73, 0x2f, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x72, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x72, 0x61,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x72, 0x61, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27,
	0x72, 0x61, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x02, 0x0a, 0x0c, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e,
	0x02, 0x10, 0x01, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x82,
	0xf5, 0xea, 0x94, 0x0e, 0x0a, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x03, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x04, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x51, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a, 0x21, 0x8a, 0xf5, 0xea, 0x94, 0x0e, 0x1b,
	0x2a, 0x19, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e,
	0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x22, 0xe0, 0x02, 0x0a, 0x0f,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x63, 0x6b, 0x12,
	0x22, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x01, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x0a, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x33, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x12, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x0c, 0x0a, 0x08, 0x6e, 0x75,
	0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x03, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4f,
	0x70, 0x65, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x04, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x51, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a, 0x25, 0x8a, 0xf5, 0xea, 0x94, 0x0e, 0x1f, 0x2a,
	0x1d, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x44,
	0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x41, 0x43, 0x4b, 0x22, 0x68,
	0x0a, 0x0d, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x12, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x0c, 0x0a, 0x08, 0x6e, 0x75,
	0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x01, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x49, 0x64, 0x3a, 0x22, 0x8a, 0xf5, 0xea, 0x94, 0x0e, 0x1c, 0x2a, 0x1a, 0x50, 0x41,
	0x43, 0x4b, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49,
	0x4e, 0x54, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x22, 0xe2, 0x03, 0x0a, 0x0f, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x0b,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x12, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x0c, 0x0a, 0x08, 0x6e, 0x75, 0x6c, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x10, 0x01, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0f, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x09, 0x0a, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x10, 0x02, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x45, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x82, 0xf5, 0xea,
	0x94, 0x0e, 0x08, 0x0a, 0x04, 0x62, 0x79, 0x74, 0x65, 0x10, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x59, 0x0a, 0x0c, 0x76, 0x6f, 0x69, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x56, 0x6f, 0x69, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x0a, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x04, 0x10, 0x04, 0x38, 0x03, 0x48, 0x00, 0x52,
	0x0b, 0x76, 0x6f, 0x69, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x0a, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x04, 0x10, 0x04, 0x38, 0x03, 0x48,
	0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x07, 0x66, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x61,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x0a, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x04, 0x10, 0x04, 0x38, 0x03,
	0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x3a, 0x28, 0x8a, 0xf5, 0xea,
	0x94, 0x0e, 0x22, 0x18, 0x01, 0x2a, 0x1c, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x48, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xea, 0x02,
	0x0a, 0x12, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x41, 0x63, 0x6b, 0x12, 0x27, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x33, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x12, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x0c, 0x0a, 0x08,
	0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x03, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea,
	0x94, 0x0e, 0x02, 0x10, 0x04, 0x52, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x43, 0x61, 0x75, 0x73,
	0x65, 0x12, 0x22, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x05, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x06, 0x52, 0x05,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x07, 0x52, 0x05, 0x63, 0x61, 0x75,
	0x73, 0x65, 0x3a, 0x26, 0x8a, 0xf5, 0xea, 0x94, 0x0e, 0x20, 0x2a, 0x1c, 0x50, 0x41, 0x43, 0x4b,
	0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x40, 0x01, 0x22, 0x63, 0x0a, 0x0a, 0x43, 0x61,
	0x75, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5,
	0xea, 0x94, 0x0e, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x02, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x08, 0x8a, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x40, 0x01, 0x22,
	0x44, 0x0a, 0x17, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x56,
	0x6f, 0x69, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x29, 0x8a, 0xf5, 0xea, 0x94,
	0x0e, 0x23, 0x08, 0x01, 0x32, 0x1f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x4f, 0x49, 0x44, 0x5f, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x72, 0x61,
	0x73, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x82, 0xf5, 0xea, 0x94, 0x0e,
	0x08, 0x0a, 0x04, 0x62, 0x79, 0x74, 0x65, 0x10, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x08,
	0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x02, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x3a,
	0x22, 0x8a, 0xf5, 0xea, 0x94, 0x0e, 0x1c, 0x32, 0x1a, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e,
	0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x22, 0xca, 0x01, 0x0a, 0x16, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02,
	0x10, 0x02, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x63,
	0x61, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x61, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x75,
	0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x02, 0x10,
	0x03, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x3a, 0x26, 0x8a, 0xf5, 0xea, 0x94, 0x0e, 0x20,
	0x32, 0x1c, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x40, 0x01,
	0x42, 0x84, 0x02, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x38, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x72, 0x61, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x52, 0x50, 0x58, 0xaa, 0x02, 0x0f, 0x52,
	0x61, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x0f, 0x52, 0x61, 0x73, 0x5c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x1b, 0x52, 0x61, 0x73, 0x5c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x11, 0x52, 0x61, 0x73, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x3a, 0x3a,
	0x56, 0x31, 0x82, 0xf5, 0xea, 0x94, 0x0e, 0x3f, 0x0a, 0x18, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x0a, 0x15, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x0a, 0x0c, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x49, 0x6d, 0x70, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ras_protocol_v1_endpoint_proto_rawDescOnce sync.Once
	file_ras_protocol_v1_endpoint_proto_rawDescData = file_ras_protocol_v1_endpoint_proto_rawDesc
)

func file_ras_protocol_v1_endpoint_proto_rawDescGZIP() []byte {
	file_ras_protocol_v1_endpoint_proto_rawDescOnce.Do(func() {
		file_ras_protocol_v1_endpoint_proto_rawDescData = protoimpl.X.CompressGZIP(file_ras_protocol_v1_endpoint_proto_rawDescData)
	})
	return file_ras_protocol_v1_endpoint_proto_rawDescData
}

var file_ras_protocol_v1_endpoint_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_ras_protocol_v1_endpoint_proto_goTypes = []interface{}{
	(*EndpointOpen)(nil),            // 0: ras.protocol.v1.EndpointOpen
	(*EndpointOpenAck)(nil),         // 1: ras.protocol.v1.EndpointOpenAck
	(*EndpointClose)(nil),           // 2: ras.protocol.v1.EndpointClose
	(*EndpointMessage)(nil),         // 3: ras.protocol.v1.EndpointMessage
	(*EndpointFailureAck)(nil),      // 4: ras.protocol.v1.EndpointFailureAck
	(*CauseError)(nil),              // 5: ras.protocol.v1.CauseError
	(*EndpointDataVoidMessage)(nil), // 6: ras.protocol.v1.EndpointDataVoidMessage
	(*EndpointDataMessage)(nil),     // 7: ras.protocol.v1.EndpointDataMessage
	(*EndpointFailureMessage)(nil),  // 8: ras.protocol.v1.EndpointFailureMessage
	nil,                             // 9: ras.protocol.v1.EndpointOpen.ParamsEntry
	nil,                             // 10: ras.protocol.v1.EndpointOpenAck.ParamsEntry
	(EndpointDataType)(0),           // 11: ras.protocol.v1.EndpointDataType
	(v1.MessageType)(0),             // 12: ras.messages.v1.MessageType
	(*Param)(nil),                   // 13: ras.protocol.v1.Param
}
var file_ras_protocol_v1_endpoint_proto_depIdxs = []int32{
	9,  // 0: ras.protocol.v1.EndpointOpen.params:type_name -> ras.protocol.v1.EndpointOpen.ParamsEntry
	10, // 1: ras.protocol.v1.EndpointOpenAck.params:type_name -> ras.protocol.v1.EndpointOpenAck.ParamsEntry
	11, // 2: ras.protocol.v1.EndpointMessage.type:type_name -> ras.protocol.v1.EndpointDataType
	6,  // 3: ras.protocol.v1.EndpointMessage.void_message:type_name -> ras.protocol.v1.EndpointDataVoidMessage
	7,  // 4: ras.protocol.v1.EndpointMessage.message:type_name -> ras.protocol.v1.EndpointDataMessage
	8,  // 5: ras.protocol.v1.EndpointMessage.failure:type_name -> ras.protocol.v1.EndpointFailureMessage
	5,  // 6: ras.protocol.v1.EndpointFailureAck.cause:type_name -> ras.protocol.v1.CauseError
	12, // 7: ras.protocol.v1.EndpointDataMessage.type:type_name -> ras.messages.v1.MessageType
	5,  // 8: ras.protocol.v1.EndpointFailureMessage.cause:type_name -> ras.protocol.v1.CauseError
	13, // 9: ras.protocol.v1.EndpointOpen.ParamsEntry.value:type_name -> ras.protocol.v1.Param
	13, // 10: ras.protocol.v1.EndpointOpenAck.ParamsEntry.value:type_name -> ras.protocol.v1.Param
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_ras_protocol_v1_endpoint_proto_init() }
func file_ras_protocol_v1_endpoint_proto_init() {
	if File_ras_protocol_v1_endpoint_proto != nil {
		return
	}
	file_ras_protocol_v1_param_proto_init()
	file_ras_protocol_v1_types_proto_init()
	file_ras_protocol_v1_packet_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ras_protocol_v1_endpoint_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointOpen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ras_protocol_v1_endpoint_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointOpenAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ras_protocol_v1_endpoint_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ras_protocol_v1_endpoint_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ras_protocol_v1_endpoint_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointFailureAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ras_protocol_v1_endpoint_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CauseError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ras_protocol_v1_endpoint_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointDataVoidMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ras_protocol_v1_endpoint_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointDataMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ras_protocol_v1_endpoint_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointFailureMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ras_protocol_v1_endpoint_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*EndpointMessage_VoidMessage)(nil),
		(*EndpointMessage_Message)(nil),
		(*EndpointMessage_Failure)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ras_protocol_v1_endpoint_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ras_protocol_v1_endpoint_proto_goTypes,
		DependencyIndexes: file_ras_protocol_v1_endpoint_proto_depIdxs,
		MessageInfos:      file_ras_protocol_v1_endpoint_proto_msgTypes,
	}.Build()
	File_ras_protocol_v1_endpoint_proto = out.File
	file_ras_protocol_v1_endpoint_proto_rawDesc = nil
	file_ras_protocol_v1_endpoint_proto_goTypes = nil
	file_ras_protocol_v1_endpoint_proto_depIdxs = nil
}
