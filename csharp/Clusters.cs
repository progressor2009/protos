// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: v8platform/serialize/v1/clusters.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace V8platform.Serialize.V1 {

  /// <summary>Holder for reflection information generated from v8platform/serialize/v1/clusters.proto</summary>
  public static partial class ClustersReflection {

    #region Descriptor
    /// <summary>File descriptor for v8platform/serialize/v1/clusters.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClustersReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZ2OHBsYXRmb3JtL3NlcmlhbGl6ZS92MS9jbHVzdGVycy5wcm90bxIXdjhw",
            "bGF0Zm9ybS5zZXJpYWxpemUudjEaH2dvb2dsZS9wcm90b2J1Zi90aW1lc3Rh",
            "bXAucHJvdG8aFnJhcy9lbmNvZGluZy9yYXMucHJvdG8igQgKC0NsdXN0ZXJJ",
            "bmZvEjkKBHV1aWQYASABKAlCJZqEngMScmFzYmluYXJ5OiJ1dWlkLDEigvXq",
            "lA4ICgR1dWlkEAFSBHV1aWQSSgoSZXhwaXJhdGlvbl90aW1lb3V0GAIgASgF",
            "QhuahJ4DDnJhc2JpbmFyeToiLDIigvXqlA4CEAJSEWV4cGlyYXRpb25UaW1l",
            "b3V0Ei8KBGhvc3QYAyABKAlCG5qEngMOcmFzYmluYXJ5OiIsMyKC9eqUDgIQ",
            "A1IEaG9zdBJCCg5saWZldGltZV9saW1pdBgEIAEoBUIbmoSeAw5yYXNiaW5h",
            "cnk6Iiw0IoL16pQOAhAEUg1saWZldGltZUxpbWl0EjsKBFBvcnQYBSABKAVC",
            "J5qEngMTcmFzYmluYXJ5OiJzaG9ydCw1IoL16pQOCQoFc2hvcnQQBVIEUG9y",
            "dBJDCg9tYXhfbWVtb3J5X3NpemUYBiABKAVCG5qEngMOcmFzYmluYXJ5OiIs",
            "NiKC9eqUDgIQBlINbWF4TWVtb3J5U2l6ZRJOChVtYXhfbWVtb3J5X3RpbWVf",
            "bGltaXQYByABKAVCG5qEngMOcmFzYmluYXJ5OiIsNyKC9eqUDgIQB1ISbWF4",
            "TWVtb3J5VGltZUxpbWl0Ei8KBG5hbWUYCCABKAlCG5qEngMOcmFzYmluYXJ5",
            "OiIsOCKC9eqUDgIQCFIEbmFtZRJCCg5zZWN1cml0eV9sZXZlbBgJIAEoBUIb",
            "moSeAw5yYXNiaW5hcnk6Iiw5IoL16pQOAhAJUg1zZWN1cml0eUxldmVsEl8K",
            "HXNlc3Npb25fZmF1bHRfdG9sZXJhbmNlX2xldmVsGAogASgFQhyahJ4DD3Jh",
            "c2JpbmFyeToiLDEwIoL16pQOAhAKUhpzZXNzaW9uRmF1bHRUb2xlcmFuY2VM",
            "ZXZlbBJMChNsb2FkX2JhbGFuY2luZ19tb2RlGAsgASgFQhyahJ4DD3Jhc2Jp",
            "bmFyeToiLDExIoL16pQOAhALUhFsb2FkQmFsYW5jaW5nTW9kZRJSChZlcnJv",
            "cnNfY291bnRfdGhyZXNob2xkGAwgASgFQhyahJ4DD3Jhc2JpbmFyeToiLDEy",
            "IoL16pQOAhAMUhRlcnJvcnNDb3VudFRocmVzaG9sZBJSChZraWxsX3Byb2Js",
            "ZW1fcHJvY2Vzc2VzGA0gASgIQhyahJ4DD3Jhc2JpbmFyeToiLDEzIoL16pQO",
            "AhANUhRraWxsUHJvYmxlbVByb2Nlc3NlcxJYChhraWxsX2J5X21lbW9yeV93",
            "aXRoX2R1bXAYDiABKAhCIJqEngMRcmFzYmluYXJ5OiIsMTQsOSKC9eqUDgQQ",
            "DhgJUhRraWxsQnlNZW1vcnlXaXRoRHVtcELwAQobY29tLnY4cGxhdGZvcm0u",
            "c2VyaWFsaXplLnYxQg1DbHVzdGVyc1Byb3RvUAFaRGdpdGh1Yi5jb20vdjhw",
            "bGF0Zm9ybS9wcm90b3MvZ2VuL3Y4cGxhdGZvcm0vc2VyaWFsaXplL3YxO3Nl",
            "cmlhbGl6ZXYxogIDVlNYqgIXVjhwbGF0Zm9ybS5TZXJpYWxpemUuVjHKAhdW",
            "OHBsYXRmb3JtXFNlcmlhbGl6ZVxWMeICI1Y4cGxhdGZvcm1cU2VyaWFsaXpl",
            "XFYxXEdQQk1ldGFkYXRh6gIZVjhwbGF0Zm9ybTo6U2VyaWFsaXplOjpWMWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Ras.Encoding.RasReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::V8platform.Serialize.V1.ClusterInfo), global::V8platform.Serialize.V1.ClusterInfo.Parser, new[]{ "Uuid", "ExpirationTimeout", "Host", "LifetimeLimit", "Port", "MaxMemorySize", "MaxMemoryTimeLimit", "Name", "SecurityLevel", "SessionFaultToleranceLevel", "LoadBalancingMode", "ErrorsCountThreshold", "KillProblemProcesses", "KillByMemoryWithDump" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClusterInfo : pb::IMessage<ClusterInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClusterInfo> _parser = new pb::MessageParser<ClusterInfo>(() => new ClusterInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClusterInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::V8platform.Serialize.V1.ClustersReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClusterInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClusterInfo(ClusterInfo other) : this() {
      uuid_ = other.uuid_;
      expirationTimeout_ = other.expirationTimeout_;
      host_ = other.host_;
      lifetimeLimit_ = other.lifetimeLimit_;
      port_ = other.port_;
      maxMemorySize_ = other.maxMemorySize_;
      maxMemoryTimeLimit_ = other.maxMemoryTimeLimit_;
      name_ = other.name_;
      securityLevel_ = other.securityLevel_;
      sessionFaultToleranceLevel_ = other.sessionFaultToleranceLevel_;
      loadBalancingMode_ = other.loadBalancingMode_;
      errorsCountThreshold_ = other.errorsCountThreshold_;
      killProblemProcesses_ = other.killProblemProcesses_;
      killByMemoryWithDump_ = other.killByMemoryWithDump_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClusterInfo Clone() {
      return new ClusterInfo(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expiration_timeout" field.</summary>
    public const int ExpirationTimeoutFieldNumber = 2;
    private int expirationTimeout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExpirationTimeout {
      get { return expirationTimeout_; }
      set {
        expirationTimeout_ = value;
      }
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 3;
    private string host_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lifetime_limit" field.</summary>
    public const int LifetimeLimitFieldNumber = 4;
    private int lifetimeLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LifetimeLimit {
      get { return lifetimeLimit_; }
      set {
        lifetimeLimit_ = value;
      }
    }

    /// <summary>Field number for the "Port" field.</summary>
    public const int PortFieldNumber = 5;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "max_memory_size" field.</summary>
    public const int MaxMemorySizeFieldNumber = 6;
    private int maxMemorySize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxMemorySize {
      get { return maxMemorySize_; }
      set {
        maxMemorySize_ = value;
      }
    }

    /// <summary>Field number for the "max_memory_time_limit" field.</summary>
    public const int MaxMemoryTimeLimitFieldNumber = 7;
    private int maxMemoryTimeLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxMemoryTimeLimit {
      get { return maxMemoryTimeLimit_; }
      set {
        maxMemoryTimeLimit_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 8;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "security_level" field.</summary>
    public const int SecurityLevelFieldNumber = 9;
    private int securityLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SecurityLevel {
      get { return securityLevel_; }
      set {
        securityLevel_ = value;
      }
    }

    /// <summary>Field number for the "session_fault_tolerance_level" field.</summary>
    public const int SessionFaultToleranceLevelFieldNumber = 10;
    private int sessionFaultToleranceLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SessionFaultToleranceLevel {
      get { return sessionFaultToleranceLevel_; }
      set {
        sessionFaultToleranceLevel_ = value;
      }
    }

    /// <summary>Field number for the "load_balancing_mode" field.</summary>
    public const int LoadBalancingModeFieldNumber = 11;
    private int loadBalancingMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LoadBalancingMode {
      get { return loadBalancingMode_; }
      set {
        loadBalancingMode_ = value;
      }
    }

    /// <summary>Field number for the "errors_count_threshold" field.</summary>
    public const int ErrorsCountThresholdFieldNumber = 12;
    private int errorsCountThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ErrorsCountThreshold {
      get { return errorsCountThreshold_; }
      set {
        errorsCountThreshold_ = value;
      }
    }

    /// <summary>Field number for the "kill_problem_processes" field.</summary>
    public const int KillProblemProcessesFieldNumber = 13;
    private bool killProblemProcesses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool KillProblemProcesses {
      get { return killProblemProcesses_; }
      set {
        killProblemProcesses_ = value;
      }
    }

    /// <summary>Field number for the "kill_by_memory_with_dump" field.</summary>
    public const int KillByMemoryWithDumpFieldNumber = 14;
    private bool killByMemoryWithDump_;
    /// <summary>
    /// version >= 9
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool KillByMemoryWithDump {
      get { return killByMemoryWithDump_; }
      set {
        killByMemoryWithDump_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClusterInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClusterInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (ExpirationTimeout != other.ExpirationTimeout) return false;
      if (Host != other.Host) return false;
      if (LifetimeLimit != other.LifetimeLimit) return false;
      if (Port != other.Port) return false;
      if (MaxMemorySize != other.MaxMemorySize) return false;
      if (MaxMemoryTimeLimit != other.MaxMemoryTimeLimit) return false;
      if (Name != other.Name) return false;
      if (SecurityLevel != other.SecurityLevel) return false;
      if (SessionFaultToleranceLevel != other.SessionFaultToleranceLevel) return false;
      if (LoadBalancingMode != other.LoadBalancingMode) return false;
      if (ErrorsCountThreshold != other.ErrorsCountThreshold) return false;
      if (KillProblemProcesses != other.KillProblemProcesses) return false;
      if (KillByMemoryWithDump != other.KillByMemoryWithDump) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (ExpirationTimeout != 0) hash ^= ExpirationTimeout.GetHashCode();
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (LifetimeLimit != 0) hash ^= LifetimeLimit.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (MaxMemorySize != 0) hash ^= MaxMemorySize.GetHashCode();
      if (MaxMemoryTimeLimit != 0) hash ^= MaxMemoryTimeLimit.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SecurityLevel != 0) hash ^= SecurityLevel.GetHashCode();
      if (SessionFaultToleranceLevel != 0) hash ^= SessionFaultToleranceLevel.GetHashCode();
      if (LoadBalancingMode != 0) hash ^= LoadBalancingMode.GetHashCode();
      if (ErrorsCountThreshold != 0) hash ^= ErrorsCountThreshold.GetHashCode();
      if (KillProblemProcesses != false) hash ^= KillProblemProcesses.GetHashCode();
      if (KillByMemoryWithDump != false) hash ^= KillByMemoryWithDump.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (ExpirationTimeout != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ExpirationTimeout);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Host);
      }
      if (LifetimeLimit != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LifetimeLimit);
      }
      if (Port != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Port);
      }
      if (MaxMemorySize != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxMemorySize);
      }
      if (MaxMemoryTimeLimit != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxMemoryTimeLimit);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Name);
      }
      if (SecurityLevel != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SecurityLevel);
      }
      if (SessionFaultToleranceLevel != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(SessionFaultToleranceLevel);
      }
      if (LoadBalancingMode != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(LoadBalancingMode);
      }
      if (ErrorsCountThreshold != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ErrorsCountThreshold);
      }
      if (KillProblemProcesses != false) {
        output.WriteRawTag(104);
        output.WriteBool(KillProblemProcesses);
      }
      if (KillByMemoryWithDump != false) {
        output.WriteRawTag(112);
        output.WriteBool(KillByMemoryWithDump);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (ExpirationTimeout != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ExpirationTimeout);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Host);
      }
      if (LifetimeLimit != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LifetimeLimit);
      }
      if (Port != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Port);
      }
      if (MaxMemorySize != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxMemorySize);
      }
      if (MaxMemoryTimeLimit != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxMemoryTimeLimit);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Name);
      }
      if (SecurityLevel != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SecurityLevel);
      }
      if (SessionFaultToleranceLevel != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(SessionFaultToleranceLevel);
      }
      if (LoadBalancingMode != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(LoadBalancingMode);
      }
      if (ErrorsCountThreshold != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ErrorsCountThreshold);
      }
      if (KillProblemProcesses != false) {
        output.WriteRawTag(104);
        output.WriteBool(KillProblemProcesses);
      }
      if (KillByMemoryWithDump != false) {
        output.WriteRawTag(112);
        output.WriteBool(KillByMemoryWithDump);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (ExpirationTimeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpirationTimeout);
      }
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (LifetimeLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LifetimeLimit);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (MaxMemorySize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxMemorySize);
      }
      if (MaxMemoryTimeLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxMemoryTimeLimit);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SecurityLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecurityLevel);
      }
      if (SessionFaultToleranceLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionFaultToleranceLevel);
      }
      if (LoadBalancingMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoadBalancingMode);
      }
      if (ErrorsCountThreshold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorsCountThreshold);
      }
      if (KillProblemProcesses != false) {
        size += 1 + 1;
      }
      if (KillByMemoryWithDump != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClusterInfo other) {
      if (other == null) {
        return;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.ExpirationTimeout != 0) {
        ExpirationTimeout = other.ExpirationTimeout;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.LifetimeLimit != 0) {
        LifetimeLimit = other.LifetimeLimit;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.MaxMemorySize != 0) {
        MaxMemorySize = other.MaxMemorySize;
      }
      if (other.MaxMemoryTimeLimit != 0) {
        MaxMemoryTimeLimit = other.MaxMemoryTimeLimit;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SecurityLevel != 0) {
        SecurityLevel = other.SecurityLevel;
      }
      if (other.SessionFaultToleranceLevel != 0) {
        SessionFaultToleranceLevel = other.SessionFaultToleranceLevel;
      }
      if (other.LoadBalancingMode != 0) {
        LoadBalancingMode = other.LoadBalancingMode;
      }
      if (other.ErrorsCountThreshold != 0) {
        ErrorsCountThreshold = other.ErrorsCountThreshold;
      }
      if (other.KillProblemProcesses != false) {
        KillProblemProcesses = other.KillProblemProcesses;
      }
      if (other.KillByMemoryWithDump != false) {
        KillByMemoryWithDump = other.KillByMemoryWithDump;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 16: {
            ExpirationTimeout = input.ReadInt32();
            break;
          }
          case 26: {
            Host = input.ReadString();
            break;
          }
          case 32: {
            LifetimeLimit = input.ReadInt32();
            break;
          }
          case 40: {
            Port = input.ReadInt32();
            break;
          }
          case 48: {
            MaxMemorySize = input.ReadInt32();
            break;
          }
          case 56: {
            MaxMemoryTimeLimit = input.ReadInt32();
            break;
          }
          case 66: {
            Name = input.ReadString();
            break;
          }
          case 72: {
            SecurityLevel = input.ReadInt32();
            break;
          }
          case 80: {
            SessionFaultToleranceLevel = input.ReadInt32();
            break;
          }
          case 88: {
            LoadBalancingMode = input.ReadInt32();
            break;
          }
          case 96: {
            ErrorsCountThreshold = input.ReadInt32();
            break;
          }
          case 104: {
            KillProblemProcesses = input.ReadBool();
            break;
          }
          case 112: {
            KillByMemoryWithDump = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 16: {
            ExpirationTimeout = input.ReadInt32();
            break;
          }
          case 26: {
            Host = input.ReadString();
            break;
          }
          case 32: {
            LifetimeLimit = input.ReadInt32();
            break;
          }
          case 40: {
            Port = input.ReadInt32();
            break;
          }
          case 48: {
            MaxMemorySize = input.ReadInt32();
            break;
          }
          case 56: {
            MaxMemoryTimeLimit = input.ReadInt32();
            break;
          }
          case 66: {
            Name = input.ReadString();
            break;
          }
          case 72: {
            SecurityLevel = input.ReadInt32();
            break;
          }
          case 80: {
            SessionFaultToleranceLevel = input.ReadInt32();
            break;
          }
          case 88: {
            LoadBalancingMode = input.ReadInt32();
            break;
          }
          case 96: {
            ErrorsCountThreshold = input.ReadInt32();
            break;
          }
          case 104: {
            KillProblemProcesses = input.ReadBool();
            break;
          }
          case 112: {
            KillByMemoryWithDump = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
