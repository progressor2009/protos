// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: v8platform/serialize/v1/licanses.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace V8platform.Serialize.V1 {

  /// <summary>Holder for reflection information generated from v8platform/serialize/v1/licanses.proto</summary>
  public static partial class LicansesReflection {

    #region Descriptor
    /// <summary>File descriptor for v8platform/serialize/v1/licanses.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LicansesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZ2OHBsYXRmb3JtL3NlcmlhbGl6ZS92MS9saWNhbnNlcy5wcm90bxIXdjhw",
            "bGF0Zm9ybS5zZXJpYWxpemUudjEaH2dvb2dsZS9wcm90b2J1Zi90aW1lc3Rh",
            "bXAucHJvdG8aFnJhcy9lbmNvZGluZy9yYXMucHJvdG8iwwUKC0xpY2Vuc2VJ",
            "bmZvEh0KCmNsdXN0ZXJfaWQYASABKAlSCWNsdXN0ZXJJZBIdCgpwcm9jZXNz",
            "X2lkGAIgASgJUglwcm9jZXNzSWQSHQoKc2Vzc2lvbl9pZBgDIAEoCVIJc2Vz",
            "c2lvbklkEhsKCXVzZXJfbmFtZRgEIAEoCVIIdXNlck5hbWUSEgoEaG9zdBgG",
            "IAEoCVIEaG9zdBIVCgZhcHBfaWQYByABKAlSBWFwcElkEiUKCWZ1bGxfbmFt",
            "ZRgIIAEoCUIIgvXqlA4CEAFSCGZ1bGxOYW1lEjUKEWZ1bGxfcHJlc2VudGF0",
            "aW9uGAkgASgJQgiC9eqUDgIQAlIQZnVsbFByZXNlbnRhdGlvbhIyChBpc3N1",
            "ZWRfYnlfc2VydmVyGAogASgIQgiC9eqUDgIQA1IOaXNzdWVkQnlTZXJ2ZXIS",
            "KwoMbGljZW5zZV90eXBlGAsgASgFQgiC9eqUDgIQBFILbGljZW5zZVR5cGUS",
            "LAoNbWF4X3VzZXJzX2FsbBgMIAEoBUIIgvXqlA4CEAVSC21heFVzZXJzQWxs",
            "EiwKDW1heF91c2Vyc19jdXIYDSABKAVCCIL16pQOAhAGUgttYXhVc2Vyc0N1",
            "chIaCgNuZXQYDiABKAhCCIL16pQOAhAHUgNuZXQSLQoNcm1uZ3JfYWRkcmVz",
            "cxgPIAEoCUIIgvXqlA4CEAhSDHJtbmdyQWRkcmVzcxIlCglybW5ncl9waWQY",
            "ECABKAlCCIL16pQOAhAJUghybW5nclBpZBInCgpybW5ncl9wb3J0GBEgASgF",
            "QgiC9eqUDgIQClIJcm1uZ3JQb3J0EiAKBnNlcmllcxgSIAEoCUIIgvXqlA4C",
            "EAtSBnNlcmllcxI3ChJzaG9ydF9wcmVzZW50YXRpb24YEyABKAlCCIL16pQO",
            "AhAMUhFzaG9ydFByZXNlbnRhdGlvbkLwAQobY29tLnY4cGxhdGZvcm0uc2Vy",
            "aWFsaXplLnYxQg1MaWNhbnNlc1Byb3RvUAFaRGdpdGh1Yi5jb20vdjhwbGF0",
            "Zm9ybS9wcm90b3MvZ2VuL3Y4cGxhdGZvcm0vc2VyaWFsaXplL3YxO3Nlcmlh",
            "bGl6ZXYxogIDVlNYqgIXVjhwbGF0Zm9ybS5TZXJpYWxpemUuVjHKAhdWOHBs",
            "YXRmb3JtXFNlcmlhbGl6ZVxWMeICI1Y4cGxhdGZvcm1cU2VyaWFsaXplXFYx",
            "XEdQQk1ldGFkYXRh6gIZVjhwbGF0Zm9ybTo6U2VyaWFsaXplOjpWMWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Ras.Encoding.RasReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::V8platform.Serialize.V1.LicenseInfo), global::V8platform.Serialize.V1.LicenseInfo.Parser, new[]{ "ClusterId", "ProcessId", "SessionId", "UserName", "Host", "AppId", "FullName", "FullPresentation", "IssuedByServer", "LicenseType", "MaxUsersAll", "MaxUsersCur", "Net", "RmngrAddress", "RmngrPid", "RmngrPort", "Series", "ShortPresentation" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LicenseInfo : pb::IMessage<LicenseInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LicenseInfo> _parser = new pb::MessageParser<LicenseInfo>(() => new LicenseInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LicenseInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::V8platform.Serialize.V1.LicansesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LicenseInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LicenseInfo(LicenseInfo other) : this() {
      clusterId_ = other.clusterId_;
      processId_ = other.processId_;
      sessionId_ = other.sessionId_;
      userName_ = other.userName_;
      host_ = other.host_;
      appId_ = other.appId_;
      fullName_ = other.fullName_;
      fullPresentation_ = other.fullPresentation_;
      issuedByServer_ = other.issuedByServer_;
      licenseType_ = other.licenseType_;
      maxUsersAll_ = other.maxUsersAll_;
      maxUsersCur_ = other.maxUsersCur_;
      net_ = other.net_;
      rmngrAddress_ = other.rmngrAddress_;
      rmngrPid_ = other.rmngrPid_;
      rmngrPort_ = other.rmngrPort_;
      series_ = other.series_;
      shortPresentation_ = other.shortPresentation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LicenseInfo Clone() {
      return new LicenseInfo(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ignore
    /// need fill
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "process_id" field.</summary>
    public const int ProcessIdFieldNumber = 2;
    private string processId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProcessId {
      get { return processId_; }
      set {
        processId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 3;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 4;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 6;
    private string host_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 7;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "full_name" field.</summary>
    public const int FullNameFieldNumber = 8;
    private string fullName_ = "";
    /// <summary>
    /// all version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FullName {
      get { return fullName_; }
      set {
        fullName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "full_presentation" field.</summary>
    public const int FullPresentationFieldNumber = 9;
    private string fullPresentation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FullPresentation {
      get { return fullPresentation_; }
      set {
        fullPresentation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "issued_by_server" field.</summary>
    public const int IssuedByServerFieldNumber = 10;
    private bool issuedByServer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IssuedByServer {
      get { return issuedByServer_; }
      set {
        issuedByServer_ = value;
      }
    }

    /// <summary>Field number for the "license_type" field.</summary>
    public const int LicenseTypeFieldNumber = 11;
    private int licenseType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LicenseType {
      get { return licenseType_; }
      set {
        licenseType_ = value;
      }
    }

    /// <summary>Field number for the "max_users_all" field.</summary>
    public const int MaxUsersAllFieldNumber = 12;
    private int maxUsersAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxUsersAll {
      get { return maxUsersAll_; }
      set {
        maxUsersAll_ = value;
      }
    }

    /// <summary>Field number for the "max_users_cur" field.</summary>
    public const int MaxUsersCurFieldNumber = 13;
    private int maxUsersCur_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxUsersCur {
      get { return maxUsersCur_; }
      set {
        maxUsersCur_ = value;
      }
    }

    /// <summary>Field number for the "net" field.</summary>
    public const int NetFieldNumber = 14;
    private bool net_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Net {
      get { return net_; }
      set {
        net_ = value;
      }
    }

    /// <summary>Field number for the "rmngr_address" field.</summary>
    public const int RmngrAddressFieldNumber = 15;
    private string rmngrAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RmngrAddress {
      get { return rmngrAddress_; }
      set {
        rmngrAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rmngr_pid" field.</summary>
    public const int RmngrPidFieldNumber = 16;
    private string rmngrPid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RmngrPid {
      get { return rmngrPid_; }
      set {
        rmngrPid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rmngr_port" field.</summary>
    public const int RmngrPortFieldNumber = 17;
    private int rmngrPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RmngrPort {
      get { return rmngrPort_; }
      set {
        rmngrPort_ = value;
      }
    }

    /// <summary>Field number for the "series" field.</summary>
    public const int SeriesFieldNumber = 18;
    private string series_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Series {
      get { return series_; }
      set {
        series_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "short_presentation" field.</summary>
    public const int ShortPresentationFieldNumber = 19;
    private string shortPresentation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShortPresentation {
      get { return shortPresentation_; }
      set {
        shortPresentation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LicenseInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LicenseInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (ProcessId != other.ProcessId) return false;
      if (SessionId != other.SessionId) return false;
      if (UserName != other.UserName) return false;
      if (Host != other.Host) return false;
      if (AppId != other.AppId) return false;
      if (FullName != other.FullName) return false;
      if (FullPresentation != other.FullPresentation) return false;
      if (IssuedByServer != other.IssuedByServer) return false;
      if (LicenseType != other.LicenseType) return false;
      if (MaxUsersAll != other.MaxUsersAll) return false;
      if (MaxUsersCur != other.MaxUsersCur) return false;
      if (Net != other.Net) return false;
      if (RmngrAddress != other.RmngrAddress) return false;
      if (RmngrPid != other.RmngrPid) return false;
      if (RmngrPort != other.RmngrPort) return false;
      if (Series != other.Series) return false;
      if (ShortPresentation != other.ShortPresentation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (ProcessId.Length != 0) hash ^= ProcessId.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (FullName.Length != 0) hash ^= FullName.GetHashCode();
      if (FullPresentation.Length != 0) hash ^= FullPresentation.GetHashCode();
      if (IssuedByServer != false) hash ^= IssuedByServer.GetHashCode();
      if (LicenseType != 0) hash ^= LicenseType.GetHashCode();
      if (MaxUsersAll != 0) hash ^= MaxUsersAll.GetHashCode();
      if (MaxUsersCur != 0) hash ^= MaxUsersCur.GetHashCode();
      if (Net != false) hash ^= Net.GetHashCode();
      if (RmngrAddress.Length != 0) hash ^= RmngrAddress.GetHashCode();
      if (RmngrPid.Length != 0) hash ^= RmngrPid.GetHashCode();
      if (RmngrPort != 0) hash ^= RmngrPort.GetHashCode();
      if (Series.Length != 0) hash ^= Series.GetHashCode();
      if (ShortPresentation.Length != 0) hash ^= ShortPresentation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (ProcessId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProcessId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SessionId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserName);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Host);
      }
      if (AppId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(AppId);
      }
      if (FullName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(FullName);
      }
      if (FullPresentation.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(FullPresentation);
      }
      if (IssuedByServer != false) {
        output.WriteRawTag(80);
        output.WriteBool(IssuedByServer);
      }
      if (LicenseType != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(LicenseType);
      }
      if (MaxUsersAll != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(MaxUsersAll);
      }
      if (MaxUsersCur != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(MaxUsersCur);
      }
      if (Net != false) {
        output.WriteRawTag(112);
        output.WriteBool(Net);
      }
      if (RmngrAddress.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(RmngrAddress);
      }
      if (RmngrPid.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(RmngrPid);
      }
      if (RmngrPort != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(RmngrPort);
      }
      if (Series.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Series);
      }
      if (ShortPresentation.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ShortPresentation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (ProcessId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProcessId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SessionId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserName);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Host);
      }
      if (AppId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(AppId);
      }
      if (FullName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(FullName);
      }
      if (FullPresentation.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(FullPresentation);
      }
      if (IssuedByServer != false) {
        output.WriteRawTag(80);
        output.WriteBool(IssuedByServer);
      }
      if (LicenseType != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(LicenseType);
      }
      if (MaxUsersAll != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(MaxUsersAll);
      }
      if (MaxUsersCur != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(MaxUsersCur);
      }
      if (Net != false) {
        output.WriteRawTag(112);
        output.WriteBool(Net);
      }
      if (RmngrAddress.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(RmngrAddress);
      }
      if (RmngrPid.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(RmngrPid);
      }
      if (RmngrPort != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(RmngrPort);
      }
      if (Series.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Series);
      }
      if (ShortPresentation.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ShortPresentation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (ProcessId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProcessId);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (FullName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullName);
      }
      if (FullPresentation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullPresentation);
      }
      if (IssuedByServer != false) {
        size += 1 + 1;
      }
      if (LicenseType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LicenseType);
      }
      if (MaxUsersAll != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxUsersAll);
      }
      if (MaxUsersCur != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxUsersCur);
      }
      if (Net != false) {
        size += 1 + 1;
      }
      if (RmngrAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RmngrAddress);
      }
      if (RmngrPid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RmngrPid);
      }
      if (RmngrPort != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RmngrPort);
      }
      if (Series.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Series);
      }
      if (ShortPresentation.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ShortPresentation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LicenseInfo other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.ProcessId.Length != 0) {
        ProcessId = other.ProcessId;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.FullName.Length != 0) {
        FullName = other.FullName;
      }
      if (other.FullPresentation.Length != 0) {
        FullPresentation = other.FullPresentation;
      }
      if (other.IssuedByServer != false) {
        IssuedByServer = other.IssuedByServer;
      }
      if (other.LicenseType != 0) {
        LicenseType = other.LicenseType;
      }
      if (other.MaxUsersAll != 0) {
        MaxUsersAll = other.MaxUsersAll;
      }
      if (other.MaxUsersCur != 0) {
        MaxUsersCur = other.MaxUsersCur;
      }
      if (other.Net != false) {
        Net = other.Net;
      }
      if (other.RmngrAddress.Length != 0) {
        RmngrAddress = other.RmngrAddress;
      }
      if (other.RmngrPid.Length != 0) {
        RmngrPid = other.RmngrPid;
      }
      if (other.RmngrPort != 0) {
        RmngrPort = other.RmngrPort;
      }
      if (other.Series.Length != 0) {
        Series = other.Series;
      }
      if (other.ShortPresentation.Length != 0) {
        ShortPresentation = other.ShortPresentation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            ProcessId = input.ReadString();
            break;
          }
          case 26: {
            SessionId = input.ReadString();
            break;
          }
          case 34: {
            UserName = input.ReadString();
            break;
          }
          case 50: {
            Host = input.ReadString();
            break;
          }
          case 58: {
            AppId = input.ReadString();
            break;
          }
          case 66: {
            FullName = input.ReadString();
            break;
          }
          case 74: {
            FullPresentation = input.ReadString();
            break;
          }
          case 80: {
            IssuedByServer = input.ReadBool();
            break;
          }
          case 88: {
            LicenseType = input.ReadInt32();
            break;
          }
          case 96: {
            MaxUsersAll = input.ReadInt32();
            break;
          }
          case 104: {
            MaxUsersCur = input.ReadInt32();
            break;
          }
          case 112: {
            Net = input.ReadBool();
            break;
          }
          case 122: {
            RmngrAddress = input.ReadString();
            break;
          }
          case 130: {
            RmngrPid = input.ReadString();
            break;
          }
          case 136: {
            RmngrPort = input.ReadInt32();
            break;
          }
          case 146: {
            Series = input.ReadString();
            break;
          }
          case 154: {
            ShortPresentation = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            ProcessId = input.ReadString();
            break;
          }
          case 26: {
            SessionId = input.ReadString();
            break;
          }
          case 34: {
            UserName = input.ReadString();
            break;
          }
          case 50: {
            Host = input.ReadString();
            break;
          }
          case 58: {
            AppId = input.ReadString();
            break;
          }
          case 66: {
            FullName = input.ReadString();
            break;
          }
          case 74: {
            FullPresentation = input.ReadString();
            break;
          }
          case 80: {
            IssuedByServer = input.ReadBool();
            break;
          }
          case 88: {
            LicenseType = input.ReadInt32();
            break;
          }
          case 96: {
            MaxUsersAll = input.ReadInt32();
            break;
          }
          case 104: {
            MaxUsersCur = input.ReadInt32();
            break;
          }
          case 112: {
            Net = input.ReadBool();
            break;
          }
          case 122: {
            RmngrAddress = input.ReadString();
            break;
          }
          case 130: {
            RmngrPid = input.ReadString();
            break;
          }
          case 136: {
            RmngrPort = input.ReadInt32();
            break;
          }
          case 146: {
            Series = input.ReadString();
            break;
          }
          case 154: {
            ShortPresentation = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
