// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: v8platform/serialize/v1/sessions.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace V8platform.Serialize.V1 {

  /// <summary>Holder for reflection information generated from v8platform/serialize/v1/sessions.proto</summary>
  public static partial class SessionsReflection {

    #region Descriptor
    /// <summary>File descriptor for v8platform/serialize/v1/sessions.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SessionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZ2OHBsYXRmb3JtL3NlcmlhbGl6ZS92MS9zZXNzaW9ucy5wcm90bxIXdjhw",
            "bGF0Zm9ybS5zZXJpYWxpemUudjEaH2dvb2dsZS9wcm90b2J1Zi90aW1lc3Rh",
            "bXAucHJvdG8aFnJhcy9lbmNvZGluZy9yYXMucHJvdG8aJnY4cGxhdGZvcm0v",
            "c2VyaWFsaXplL3YxL2xpY2Fuc2VzLnByb3RvIvoUCgtTZXNzaW9uSW5mbxIi",
            "CgR1dWlkGAEgASgJQg6C9eqUDggKBHV1aWQQAVIEdXVpZBIfCgZhcHBfaWQY",
            "AiABKAlCCIL16pQOAhACUgVhcHBJZBIwCg9ibG9ja2VkX2J5X2RibXMYAyAB",
            "KAVCCIL16pQOAhADUg1ibG9ja2VkQnlEYm1zEiwKDWJsb2NrZWRfYnlfbHMY",
            "BCABKAVCCIL16pQOAhAEUgtibG9ja2VkQnlMcxIlCglieXRlc19hbGwYBSAB",
            "KANCCIL16pQOAhAFUghieXRlc0FsbBIvCg5ieXRlc19sYXN0NW1pbhgGIAEo",
            "A0IIgvXqlA4CEAZSDWJ5dGVzTGFzdDVtaW4SJQoJY2FsbHNfYWxsGAcgASgF",
            "QgiC9eqUDgIQB1IIY2FsbHNBbGwSLwoOY2FsbHNfbGFzdDVtaW4YCCABKANC",
            "CIL16pQOAhAIUg1jYWxsc0xhc3Q1bWluEjMKDWNvbm5lY3Rpb25faWQYCSAB",
            "KAlCDoL16pQOCAoEdXVpZBAJUgxjb25uZWN0aW9uSWQSLgoOZGJtc19ieXRl",
            "c19hbGwYCiABKANCCIL16pQOAhAKUgxkYm1zQnl0ZXNBbGwSOAoTZGJtc19i",
            "eXRlc19sYXN0NW1pbhgLIAEoA0IIgvXqlA4CEAtSEWRibXNCeXRlc0xhc3Q1",
            "bWluEioKDGRiX3Byb2NfaW5mbxgMIAEoCUIIgvXqlA4CEAxSCmRiUHJvY0lu",
            "Zm8SKgoMZGJfcHJvY190b29rGA0gASgFQgiC9eqUDgIQDVIKZGJQcm9jVG9v",
            "axJRCg9kYl9wcm9jX3Rvb2tfYXQYDiABKAsyGi5nb29nbGUucHJvdG9idWYu",
            "VGltZXN0YW1wQg6C9eqUDggKBHRpbWUQDlIMZGJQcm9jVG9va0F0EisKDGR1",
            "cmF0aW9uX2FsbBgPIAEoBUIIgvXqlA4CEA9SC2R1cmF0aW9uQWxsEjQKEWR1",
            "cmF0aW9uX2FsbF9kYm1zGBAgASgFQgiC9eqUDgIQEFIPZHVyYXRpb25BbGxE",
            "Ym1zEjMKEGR1cmF0aW9uX2N1cnJlbnQYESABKAVCCIL16pQOAhARUg9kdXJh",
            "dGlvbkN1cnJlbnQSPAoVZHVyYXRpb25fY3VycmVudF9kYm1zGBIgASgFQgiC",
            "9eqUDgIQElITZHVyYXRpb25DdXJyZW50RGJtcxI3ChNkdXJhdGlvbl9sYXN0",
            "XzVfbWluGBMgASgDQgiC9eqUDgIQE1IQZHVyYXRpb25MYXN0NU1pbhJAChhk",
            "dXJhdGlvbl9sYXN0XzVfbWluX2RibXMYFCABKANCCIL16pQOAhAUUhRkdXJh",
            "dGlvbkxhc3Q1TWluRGJtcxIcCgRob3N0GBUgASgJQgiC9eqUDgIQFVIEaG9z",
            "dBIvCgtpbmZvYmFzZV9pZBgWIAEoCUIOgvXqlA4ICgR1dWlkEBZSCmluZm9i",
            "YXNlSWQSUAoObGFzdF9hY3RpdmVfYXQYFyABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wQg6C9eqUDggKBHRpbWUQF1IMbGFzdEFjdGl2ZUF0EiYK",
            "CWhpYmVybmF0ZRgYIAEoCEIIgvXqlA4CEBhSCWhpYmVybmF0ZRJNCh5wYXNz",
            "aXZlX3Nlc3Npb25faGliZXJuYXRlX3RpbWUYGSABKAVCCIL16pQOAhAZUhtw",
            "YXNzaXZlU2Vzc2lvbkhpYmVybmF0ZVRpbWUSUQogaGliZXJuYXRlX3Nlc3Np",
            "b25fdGVybWluYXRlX3RpbWUYGiABKAVCCIL16pQOAhAaUh1oaWJlcm5hdGVT",
            "ZXNzaW9uVGVybWluYXRlVGltZRJKCghsaWNlbnNlcxgbIAMoCzIkLnY4cGxh",
            "dGZvcm0uc2VyaWFsaXplLnYxLkxpY2Vuc2VJbmZvQgiC9eqUDgIQG1IIbGlj",
            "ZW5zZXMSIAoGbG9jYWxlGBwgASgJQgiC9eqUDgIQHFIGbG9jYWxlEi0KCnBy",
            "b2Nlc3NfaWQYHSABKAlCDoL16pQOCAoEdXVpZBAdUglwcm9jZXNzSWQSGAoC",
            "aWQYHiABKAVCCIL16pQOAhAeUgJpZBJJCgpzdGFydGVkX2F0GB8gASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIOgvXqlA4ICgR0aW1lEB9SCXN0",
            "YXJ0ZWRBdBIlCgl1c2VyX25hbWUYICABKAlCCIL16pQOAhAgUgh1c2VyTmFt",
            "ZRIxCg5tZW1vcnlfY3VycmVudBghIAEoA0IKgvXqlA4EECEYBFINbWVtb3J5",
            "Q3VycmVudBIzCg9tZW1vcnlfbGFzdDVtaW4YIiABKANCCoL16pQOBBAiGARS",
            "Dm1lbW9yeUxhc3Q1bWluEi0KDG1lbW9yeV90b3RhbBgjIAEoA0IKgvXqlA4E",
            "ECMYBFILbWVtb3J5VG90YWwSLQoMcmVhZF9jdXJyZW50GCQgASgDQgqC9eqU",
            "DgQQJBgEUgtyZWFkQ3VycmVudBIvCg1yZWFkX2xhc3Q1bWluGCUgASgDQgqC",
            "9eqUDgQQJRgEUgxyZWFkTGFzdDVtaW4SKQoKcmVhZF90b3RhbBgmIAEoA0IK",
            "gvXqlA4EECYYBFIJcmVhZFRvdGFsEi8KDXdyaXRlX2N1cnJlbnQYJyABKANC",
            "CoL16pQOBBAnGARSDHdyaXRlQ3VycmVudBIxCg53cml0ZV9sYXN0NW1pbhgo",
            "IAEoA0IKgvXqlA4EECgYBFINd3JpdGVMYXN0NW1pbhIrCgt3cml0ZV90b3Rh",
            "bBgpIAEoA0IKgvXqlA4EECkYBFIKd3JpdGVUb3RhbBJEChhkdXJhdGlvbl9j",
            "dXJyZW50X3NlcnZpY2UYKiABKAVCCoL16pQOBBAqGAVSFmR1cmF0aW9uQ3Vy",
            "cmVudFNlcnZpY2USRgoZZHVyYXRpb25fbGFzdDVtaW5fc2VydmljZRgrIAEo",
            "A0IKgvXqlA4EECsYBVIXZHVyYXRpb25MYXN0NW1pblNlcnZpY2USPAoUZHVy",
            "YXRpb25fYWxsX3NlcnZpY2UYLCABKAVCCoL16pQOBBAsGAVSEmR1cmF0aW9u",
            "QWxsU2VydmljZRI8ChRjdXJyZW50X3NlcnZpY2VfbmFtZRgtIAEoCUIKgvXq",
            "lA4EEC0YBVISY3VycmVudFNlcnZpY2VOYW1lEjQKEGNwdV90aW1lX2N1cnJl",
            "bnQYLiABKANCCoL16pQOBBAuGAZSDmNwdVRpbWVDdXJyZW50EjYKEWNwdV90",
            "aW1lX2xhc3Q1bWluGC8gASgDQgqC9eqUDgQQLxgGUg9jcHVUaW1lTGFzdDVt",
            "aW4SMAoOY3B1X3RpbWVfdG90YWwYMCABKANCCoL16pQOBBAwGAZSDGNwdVRp",
            "bWVUb3RhbBIzCg9kYXRhX3NlcGFyYXRpb24YMSABKAlCCoL16pQOBBAxGAdS",
            "DmRhdGFTZXBhcmF0aW9uEjYKEWNsaWVudF9pcF9hZGRyZXNzGDIgASgJQgqC",
            "9eqUDgQQMhgKUg9jbGllbnRJcEFkZHJlc3MSHQoKY2x1c3Rlcl9pZBgzIAEo",
            "CVIJY2x1c3RlcklkQvABChtjb20udjhwbGF0Zm9ybS5zZXJpYWxpemUudjFC",
            "DVNlc3Npb25zUHJvdG9QAVpEZ2l0aHViLmNvbS92OHBsYXRmb3JtL3Byb3Rv",
            "cy9nZW4vdjhwbGF0Zm9ybS9zZXJpYWxpemUvdjE7c2VyaWFsaXpldjGiAgNW",
            "U1iqAhdWOHBsYXRmb3JtLlNlcmlhbGl6ZS5WMcoCF1Y4cGxhdGZvcm1cU2Vy",
            "aWFsaXplXFYx4gIjVjhwbGF0Zm9ybVxTZXJpYWxpemVcVjFcR1BCTWV0YWRh",
            "dGHqAhlWOHBsYXRmb3JtOjpTZXJpYWxpemU6OlYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Ras.Encoding.RasReflection.Descriptor, global::V8platform.Serialize.V1.LicansesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::V8platform.Serialize.V1.SessionInfo), global::V8platform.Serialize.V1.SessionInfo.Parser, new[]{ "Uuid", "AppId", "BlockedByDbms", "BlockedByLs", "BytesAll", "BytesLast5Min", "CallsAll", "CallsLast5Min", "ConnectionId", "DbmsBytesAll", "DbmsBytesLast5Min", "DbProcInfo", "DbProcTook", "DbProcTookAt", "DurationAll", "DurationAllDbms", "DurationCurrent", "DurationCurrentDbms", "DurationLast5Min", "DurationLast5MinDbms", "Host", "InfobaseId", "LastActiveAt", "Hibernate", "PassiveSessionHibernateTime", "HibernateSessionTerminateTime", "Licenses", "Locale", "ProcessId", "Id", "StartedAt", "UserName", "MemoryCurrent", "MemoryLast5Min", "MemoryTotal", "ReadCurrent", "ReadLast5Min", "ReadTotal", "WriteCurrent", "WriteLast5Min", "WriteTotal", "DurationCurrentService", "DurationLast5MinService", "DurationAllService", "CurrentServiceName", "CpuTimeCurrent", "CpuTimeLast5Min", "CpuTimeTotal", "DataSeparation", "ClientIpAddress", "ClusterId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SessionInfo : pb::IMessage<SessionInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SessionInfo> _parser = new pb::MessageParser<SessionInfo>(() => new SessionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SessionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::V8platform.Serialize.V1.SessionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SessionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SessionInfo(SessionInfo other) : this() {
      uuid_ = other.uuid_;
      appId_ = other.appId_;
      blockedByDbms_ = other.blockedByDbms_;
      blockedByLs_ = other.blockedByLs_;
      bytesAll_ = other.bytesAll_;
      bytesLast5Min_ = other.bytesLast5Min_;
      callsAll_ = other.callsAll_;
      callsLast5Min_ = other.callsLast5Min_;
      connectionId_ = other.connectionId_;
      dbmsBytesAll_ = other.dbmsBytesAll_;
      dbmsBytesLast5Min_ = other.dbmsBytesLast5Min_;
      dbProcInfo_ = other.dbProcInfo_;
      dbProcTook_ = other.dbProcTook_;
      dbProcTookAt_ = other.dbProcTookAt_ != null ? other.dbProcTookAt_.Clone() : null;
      durationAll_ = other.durationAll_;
      durationAllDbms_ = other.durationAllDbms_;
      durationCurrent_ = other.durationCurrent_;
      durationCurrentDbms_ = other.durationCurrentDbms_;
      durationLast5Min_ = other.durationLast5Min_;
      durationLast5MinDbms_ = other.durationLast5MinDbms_;
      host_ = other.host_;
      infobaseId_ = other.infobaseId_;
      lastActiveAt_ = other.lastActiveAt_ != null ? other.lastActiveAt_.Clone() : null;
      hibernate_ = other.hibernate_;
      passiveSessionHibernateTime_ = other.passiveSessionHibernateTime_;
      hibernateSessionTerminateTime_ = other.hibernateSessionTerminateTime_;
      licenses_ = other.licenses_.Clone();
      locale_ = other.locale_;
      processId_ = other.processId_;
      id_ = other.id_;
      startedAt_ = other.startedAt_ != null ? other.startedAt_.Clone() : null;
      userName_ = other.userName_;
      memoryCurrent_ = other.memoryCurrent_;
      memoryLast5Min_ = other.memoryLast5Min_;
      memoryTotal_ = other.memoryTotal_;
      readCurrent_ = other.readCurrent_;
      readLast5Min_ = other.readLast5Min_;
      readTotal_ = other.readTotal_;
      writeCurrent_ = other.writeCurrent_;
      writeLast5Min_ = other.writeLast5Min_;
      writeTotal_ = other.writeTotal_;
      durationCurrentService_ = other.durationCurrentService_;
      durationLast5MinService_ = other.durationLast5MinService_;
      durationAllService_ = other.durationAllService_;
      currentServiceName_ = other.currentServiceName_;
      cpuTimeCurrent_ = other.cpuTimeCurrent_;
      cpuTimeLast5Min_ = other.cpuTimeLast5Min_;
      cpuTimeTotal_ = other.cpuTimeTotal_;
      dataSeparation_ = other.dataSeparation_;
      clientIpAddress_ = other.clientIpAddress_;
      clusterId_ = other.clusterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SessionInfo Clone() {
      return new SessionInfo(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 2;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "blocked_by_dbms" field.</summary>
    public const int BlockedByDbmsFieldNumber = 3;
    private int blockedByDbms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BlockedByDbms {
      get { return blockedByDbms_; }
      set {
        blockedByDbms_ = value;
      }
    }

    /// <summary>Field number for the "blocked_by_ls" field.</summary>
    public const int BlockedByLsFieldNumber = 4;
    private int blockedByLs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BlockedByLs {
      get { return blockedByLs_; }
      set {
        blockedByLs_ = value;
      }
    }

    /// <summary>Field number for the "bytes_all" field.</summary>
    public const int BytesAllFieldNumber = 5;
    private long bytesAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BytesAll {
      get { return bytesAll_; }
      set {
        bytesAll_ = value;
      }
    }

    /// <summary>Field number for the "bytes_last5min" field.</summary>
    public const int BytesLast5MinFieldNumber = 6;
    private long bytesLast5Min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BytesLast5Min {
      get { return bytesLast5Min_; }
      set {
        bytesLast5Min_ = value;
      }
    }

    /// <summary>Field number for the "calls_all" field.</summary>
    public const int CallsAllFieldNumber = 7;
    private int callsAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CallsAll {
      get { return callsAll_; }
      set {
        callsAll_ = value;
      }
    }

    /// <summary>Field number for the "calls_last5min" field.</summary>
    public const int CallsLast5MinFieldNumber = 8;
    private long callsLast5Min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CallsLast5Min {
      get { return callsLast5Min_; }
      set {
        callsLast5Min_ = value;
      }
    }

    /// <summary>Field number for the "connection_id" field.</summary>
    public const int ConnectionIdFieldNumber = 9;
    private string connectionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ConnectionId {
      get { return connectionId_; }
      set {
        connectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dbms_bytes_all" field.</summary>
    public const int DbmsBytesAllFieldNumber = 10;
    private long dbmsBytesAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DbmsBytesAll {
      get { return dbmsBytesAll_; }
      set {
        dbmsBytesAll_ = value;
      }
    }

    /// <summary>Field number for the "dbms_bytes_last5min" field.</summary>
    public const int DbmsBytesLast5MinFieldNumber = 11;
    private long dbmsBytesLast5Min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DbmsBytesLast5Min {
      get { return dbmsBytesLast5Min_; }
      set {
        dbmsBytesLast5Min_ = value;
      }
    }

    /// <summary>Field number for the "db_proc_info" field.</summary>
    public const int DbProcInfoFieldNumber = 12;
    private string dbProcInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DbProcInfo {
      get { return dbProcInfo_; }
      set {
        dbProcInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "db_proc_took" field.</summary>
    public const int DbProcTookFieldNumber = 13;
    private int dbProcTook_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DbProcTook {
      get { return dbProcTook_; }
      set {
        dbProcTook_ = value;
      }
    }

    /// <summary>Field number for the "db_proc_took_at" field.</summary>
    public const int DbProcTookAtFieldNumber = 14;
    private global::Google.Protobuf.WellKnownTypes.Timestamp dbProcTookAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DbProcTookAt {
      get { return dbProcTookAt_; }
      set {
        dbProcTookAt_ = value;
      }
    }

    /// <summary>Field number for the "duration_all" field.</summary>
    public const int DurationAllFieldNumber = 15;
    private int durationAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DurationAll {
      get { return durationAll_; }
      set {
        durationAll_ = value;
      }
    }

    /// <summary>Field number for the "duration_all_dbms" field.</summary>
    public const int DurationAllDbmsFieldNumber = 16;
    private int durationAllDbms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DurationAllDbms {
      get { return durationAllDbms_; }
      set {
        durationAllDbms_ = value;
      }
    }

    /// <summary>Field number for the "duration_current" field.</summary>
    public const int DurationCurrentFieldNumber = 17;
    private int durationCurrent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DurationCurrent {
      get { return durationCurrent_; }
      set {
        durationCurrent_ = value;
      }
    }

    /// <summary>Field number for the "duration_current_dbms" field.</summary>
    public const int DurationCurrentDbmsFieldNumber = 18;
    private int durationCurrentDbms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DurationCurrentDbms {
      get { return durationCurrentDbms_; }
      set {
        durationCurrentDbms_ = value;
      }
    }

    /// <summary>Field number for the "duration_last_5_min" field.</summary>
    public const int DurationLast5MinFieldNumber = 19;
    private long durationLast5Min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DurationLast5Min {
      get { return durationLast5Min_; }
      set {
        durationLast5Min_ = value;
      }
    }

    /// <summary>Field number for the "duration_last_5_min_dbms" field.</summary>
    public const int DurationLast5MinDbmsFieldNumber = 20;
    private long durationLast5MinDbms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DurationLast5MinDbms {
      get { return durationLast5MinDbms_; }
      set {
        durationLast5MinDbms_ = value;
      }
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 21;
    private string host_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "infobase_id" field.</summary>
    public const int InfobaseIdFieldNumber = 22;
    private string infobaseId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InfobaseId {
      get { return infobaseId_; }
      set {
        infobaseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_active_at" field.</summary>
    public const int LastActiveAtFieldNumber = 23;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastActiveAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastActiveAt {
      get { return lastActiveAt_; }
      set {
        lastActiveAt_ = value;
      }
    }

    /// <summary>Field number for the "hibernate" field.</summary>
    public const int HibernateFieldNumber = 24;
    private bool hibernate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Hibernate {
      get { return hibernate_; }
      set {
        hibernate_ = value;
      }
    }

    /// <summary>Field number for the "passive_session_hibernate_time" field.</summary>
    public const int PassiveSessionHibernateTimeFieldNumber = 25;
    private int passiveSessionHibernateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PassiveSessionHibernateTime {
      get { return passiveSessionHibernateTime_; }
      set {
        passiveSessionHibernateTime_ = value;
      }
    }

    /// <summary>Field number for the "hibernate_session_terminate_time" field.</summary>
    public const int HibernateSessionTerminateTimeFieldNumber = 26;
    private int hibernateSessionTerminateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HibernateSessionTerminateTime {
      get { return hibernateSessionTerminateTime_; }
      set {
        hibernateSessionTerminateTime_ = value;
      }
    }

    /// <summary>Field number for the "licenses" field.</summary>
    public const int LicensesFieldNumber = 27;
    private static readonly pb::FieldCodec<global::V8platform.Serialize.V1.LicenseInfo> _repeated_licenses_codec
        = pb::FieldCodec.ForMessage(218, global::V8platform.Serialize.V1.LicenseInfo.Parser);
    private readonly pbc::RepeatedField<global::V8platform.Serialize.V1.LicenseInfo> licenses_ = new pbc::RepeatedField<global::V8platform.Serialize.V1.LicenseInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::V8platform.Serialize.V1.LicenseInfo> Licenses {
      get { return licenses_; }
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 28;
    private string locale_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Locale {
      get { return locale_; }
      set {
        locale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "process_id" field.</summary>
    public const int ProcessIdFieldNumber = 29;
    private string processId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProcessId {
      get { return processId_; }
      set {
        processId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 30;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "started_at" field.</summary>
    public const int StartedAtFieldNumber = 31;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartedAt {
      get { return startedAt_; }
      set {
        startedAt_ = value;
      }
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 32;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memory_current" field.</summary>
    public const int MemoryCurrentFieldNumber = 33;
    private long memoryCurrent_;
    /// <summary>
    /// version >= 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MemoryCurrent {
      get { return memoryCurrent_; }
      set {
        memoryCurrent_ = value;
      }
    }

    /// <summary>Field number for the "memory_last5min" field.</summary>
    public const int MemoryLast5MinFieldNumber = 34;
    private long memoryLast5Min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MemoryLast5Min {
      get { return memoryLast5Min_; }
      set {
        memoryLast5Min_ = value;
      }
    }

    /// <summary>Field number for the "memory_total" field.</summary>
    public const int MemoryTotalFieldNumber = 35;
    private long memoryTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MemoryTotal {
      get { return memoryTotal_; }
      set {
        memoryTotal_ = value;
      }
    }

    /// <summary>Field number for the "read_current" field.</summary>
    public const int ReadCurrentFieldNumber = 36;
    private long readCurrent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ReadCurrent {
      get { return readCurrent_; }
      set {
        readCurrent_ = value;
      }
    }

    /// <summary>Field number for the "read_last5min" field.</summary>
    public const int ReadLast5MinFieldNumber = 37;
    private long readLast5Min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ReadLast5Min {
      get { return readLast5Min_; }
      set {
        readLast5Min_ = value;
      }
    }

    /// <summary>Field number for the "read_total" field.</summary>
    public const int ReadTotalFieldNumber = 38;
    private long readTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ReadTotal {
      get { return readTotal_; }
      set {
        readTotal_ = value;
      }
    }

    /// <summary>Field number for the "write_current" field.</summary>
    public const int WriteCurrentFieldNumber = 39;
    private long writeCurrent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long WriteCurrent {
      get { return writeCurrent_; }
      set {
        writeCurrent_ = value;
      }
    }

    /// <summary>Field number for the "write_last5min" field.</summary>
    public const int WriteLast5MinFieldNumber = 40;
    private long writeLast5Min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long WriteLast5Min {
      get { return writeLast5Min_; }
      set {
        writeLast5Min_ = value;
      }
    }

    /// <summary>Field number for the "write_total" field.</summary>
    public const int WriteTotalFieldNumber = 41;
    private long writeTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long WriteTotal {
      get { return writeTotal_; }
      set {
        writeTotal_ = value;
      }
    }

    /// <summary>Field number for the "duration_current_service" field.</summary>
    public const int DurationCurrentServiceFieldNumber = 42;
    private int durationCurrentService_;
    /// <summary>
    /// version >= 5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DurationCurrentService {
      get { return durationCurrentService_; }
      set {
        durationCurrentService_ = value;
      }
    }

    /// <summary>Field number for the "duration_last5min_service" field.</summary>
    public const int DurationLast5MinServiceFieldNumber = 43;
    private long durationLast5MinService_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DurationLast5MinService {
      get { return durationLast5MinService_; }
      set {
        durationLast5MinService_ = value;
      }
    }

    /// <summary>Field number for the "duration_all_service" field.</summary>
    public const int DurationAllServiceFieldNumber = 44;
    private int durationAllService_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DurationAllService {
      get { return durationAllService_; }
      set {
        durationAllService_ = value;
      }
    }

    /// <summary>Field number for the "current_service_name" field.</summary>
    public const int CurrentServiceNameFieldNumber = 45;
    private string currentServiceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CurrentServiceName {
      get { return currentServiceName_; }
      set {
        currentServiceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cpu_time_current" field.</summary>
    public const int CpuTimeCurrentFieldNumber = 46;
    private long cpuTimeCurrent_;
    /// <summary>
    /// version >= 6
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CpuTimeCurrent {
      get { return cpuTimeCurrent_; }
      set {
        cpuTimeCurrent_ = value;
      }
    }

    /// <summary>Field number for the "cpu_time_last5min" field.</summary>
    public const int CpuTimeLast5MinFieldNumber = 47;
    private long cpuTimeLast5Min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CpuTimeLast5Min {
      get { return cpuTimeLast5Min_; }
      set {
        cpuTimeLast5Min_ = value;
      }
    }

    /// <summary>Field number for the "cpu_time_total" field.</summary>
    public const int CpuTimeTotalFieldNumber = 48;
    private long cpuTimeTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CpuTimeTotal {
      get { return cpuTimeTotal_; }
      set {
        cpuTimeTotal_ = value;
      }
    }

    /// <summary>Field number for the "data_separation" field.</summary>
    public const int DataSeparationFieldNumber = 49;
    private string dataSeparation_ = "";
    /// <summary>
    /// version >= 7
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DataSeparation {
      get { return dataSeparation_; }
      set {
        dataSeparation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_ip_address" field.</summary>
    public const int ClientIpAddressFieldNumber = 50;
    private string clientIpAddress_ = "";
    /// <summary>
    /// version >= 10
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientIpAddress {
      get { return clientIpAddress_; }
      set {
        clientIpAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 51;
    private string clusterId_ = "";
    /// <summary>
    /// ignore
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SessionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SessionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (AppId != other.AppId) return false;
      if (BlockedByDbms != other.BlockedByDbms) return false;
      if (BlockedByLs != other.BlockedByLs) return false;
      if (BytesAll != other.BytesAll) return false;
      if (BytesLast5Min != other.BytesLast5Min) return false;
      if (CallsAll != other.CallsAll) return false;
      if (CallsLast5Min != other.CallsLast5Min) return false;
      if (ConnectionId != other.ConnectionId) return false;
      if (DbmsBytesAll != other.DbmsBytesAll) return false;
      if (DbmsBytesLast5Min != other.DbmsBytesLast5Min) return false;
      if (DbProcInfo != other.DbProcInfo) return false;
      if (DbProcTook != other.DbProcTook) return false;
      if (!object.Equals(DbProcTookAt, other.DbProcTookAt)) return false;
      if (DurationAll != other.DurationAll) return false;
      if (DurationAllDbms != other.DurationAllDbms) return false;
      if (DurationCurrent != other.DurationCurrent) return false;
      if (DurationCurrentDbms != other.DurationCurrentDbms) return false;
      if (DurationLast5Min != other.DurationLast5Min) return false;
      if (DurationLast5MinDbms != other.DurationLast5MinDbms) return false;
      if (Host != other.Host) return false;
      if (InfobaseId != other.InfobaseId) return false;
      if (!object.Equals(LastActiveAt, other.LastActiveAt)) return false;
      if (Hibernate != other.Hibernate) return false;
      if (PassiveSessionHibernateTime != other.PassiveSessionHibernateTime) return false;
      if (HibernateSessionTerminateTime != other.HibernateSessionTerminateTime) return false;
      if(!licenses_.Equals(other.licenses_)) return false;
      if (Locale != other.Locale) return false;
      if (ProcessId != other.ProcessId) return false;
      if (Id != other.Id) return false;
      if (!object.Equals(StartedAt, other.StartedAt)) return false;
      if (UserName != other.UserName) return false;
      if (MemoryCurrent != other.MemoryCurrent) return false;
      if (MemoryLast5Min != other.MemoryLast5Min) return false;
      if (MemoryTotal != other.MemoryTotal) return false;
      if (ReadCurrent != other.ReadCurrent) return false;
      if (ReadLast5Min != other.ReadLast5Min) return false;
      if (ReadTotal != other.ReadTotal) return false;
      if (WriteCurrent != other.WriteCurrent) return false;
      if (WriteLast5Min != other.WriteLast5Min) return false;
      if (WriteTotal != other.WriteTotal) return false;
      if (DurationCurrentService != other.DurationCurrentService) return false;
      if (DurationLast5MinService != other.DurationLast5MinService) return false;
      if (DurationAllService != other.DurationAllService) return false;
      if (CurrentServiceName != other.CurrentServiceName) return false;
      if (CpuTimeCurrent != other.CpuTimeCurrent) return false;
      if (CpuTimeLast5Min != other.CpuTimeLast5Min) return false;
      if (CpuTimeTotal != other.CpuTimeTotal) return false;
      if (DataSeparation != other.DataSeparation) return false;
      if (ClientIpAddress != other.ClientIpAddress) return false;
      if (ClusterId != other.ClusterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (BlockedByDbms != 0) hash ^= BlockedByDbms.GetHashCode();
      if (BlockedByLs != 0) hash ^= BlockedByLs.GetHashCode();
      if (BytesAll != 0L) hash ^= BytesAll.GetHashCode();
      if (BytesLast5Min != 0L) hash ^= BytesLast5Min.GetHashCode();
      if (CallsAll != 0) hash ^= CallsAll.GetHashCode();
      if (CallsLast5Min != 0L) hash ^= CallsLast5Min.GetHashCode();
      if (ConnectionId.Length != 0) hash ^= ConnectionId.GetHashCode();
      if (DbmsBytesAll != 0L) hash ^= DbmsBytesAll.GetHashCode();
      if (DbmsBytesLast5Min != 0L) hash ^= DbmsBytesLast5Min.GetHashCode();
      if (DbProcInfo.Length != 0) hash ^= DbProcInfo.GetHashCode();
      if (DbProcTook != 0) hash ^= DbProcTook.GetHashCode();
      if (dbProcTookAt_ != null) hash ^= DbProcTookAt.GetHashCode();
      if (DurationAll != 0) hash ^= DurationAll.GetHashCode();
      if (DurationAllDbms != 0) hash ^= DurationAllDbms.GetHashCode();
      if (DurationCurrent != 0) hash ^= DurationCurrent.GetHashCode();
      if (DurationCurrentDbms != 0) hash ^= DurationCurrentDbms.GetHashCode();
      if (DurationLast5Min != 0L) hash ^= DurationLast5Min.GetHashCode();
      if (DurationLast5MinDbms != 0L) hash ^= DurationLast5MinDbms.GetHashCode();
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (InfobaseId.Length != 0) hash ^= InfobaseId.GetHashCode();
      if (lastActiveAt_ != null) hash ^= LastActiveAt.GetHashCode();
      if (Hibernate != false) hash ^= Hibernate.GetHashCode();
      if (PassiveSessionHibernateTime != 0) hash ^= PassiveSessionHibernateTime.GetHashCode();
      if (HibernateSessionTerminateTime != 0) hash ^= HibernateSessionTerminateTime.GetHashCode();
      hash ^= licenses_.GetHashCode();
      if (Locale.Length != 0) hash ^= Locale.GetHashCode();
      if (ProcessId.Length != 0) hash ^= ProcessId.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (startedAt_ != null) hash ^= StartedAt.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (MemoryCurrent != 0L) hash ^= MemoryCurrent.GetHashCode();
      if (MemoryLast5Min != 0L) hash ^= MemoryLast5Min.GetHashCode();
      if (MemoryTotal != 0L) hash ^= MemoryTotal.GetHashCode();
      if (ReadCurrent != 0L) hash ^= ReadCurrent.GetHashCode();
      if (ReadLast5Min != 0L) hash ^= ReadLast5Min.GetHashCode();
      if (ReadTotal != 0L) hash ^= ReadTotal.GetHashCode();
      if (WriteCurrent != 0L) hash ^= WriteCurrent.GetHashCode();
      if (WriteLast5Min != 0L) hash ^= WriteLast5Min.GetHashCode();
      if (WriteTotal != 0L) hash ^= WriteTotal.GetHashCode();
      if (DurationCurrentService != 0) hash ^= DurationCurrentService.GetHashCode();
      if (DurationLast5MinService != 0L) hash ^= DurationLast5MinService.GetHashCode();
      if (DurationAllService != 0) hash ^= DurationAllService.GetHashCode();
      if (CurrentServiceName.Length != 0) hash ^= CurrentServiceName.GetHashCode();
      if (CpuTimeCurrent != 0L) hash ^= CpuTimeCurrent.GetHashCode();
      if (CpuTimeLast5Min != 0L) hash ^= CpuTimeLast5Min.GetHashCode();
      if (CpuTimeTotal != 0L) hash ^= CpuTimeTotal.GetHashCode();
      if (DataSeparation.Length != 0) hash ^= DataSeparation.GetHashCode();
      if (ClientIpAddress.Length != 0) hash ^= ClientIpAddress.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (AppId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppId);
      }
      if (BlockedByDbms != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BlockedByDbms);
      }
      if (BlockedByLs != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BlockedByLs);
      }
      if (BytesAll != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(BytesAll);
      }
      if (BytesLast5Min != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BytesLast5Min);
      }
      if (CallsAll != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CallsAll);
      }
      if (CallsLast5Min != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(CallsLast5Min);
      }
      if (ConnectionId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ConnectionId);
      }
      if (DbmsBytesAll != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(DbmsBytesAll);
      }
      if (DbmsBytesLast5Min != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(DbmsBytesLast5Min);
      }
      if (DbProcInfo.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DbProcInfo);
      }
      if (DbProcTook != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(DbProcTook);
      }
      if (dbProcTookAt_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(DbProcTookAt);
      }
      if (DurationAll != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(DurationAll);
      }
      if (DurationAllDbms != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(DurationAllDbms);
      }
      if (DurationCurrent != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(DurationCurrent);
      }
      if (DurationCurrentDbms != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(DurationCurrentDbms);
      }
      if (DurationLast5Min != 0L) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(DurationLast5Min);
      }
      if (DurationLast5MinDbms != 0L) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(DurationLast5MinDbms);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Host);
      }
      if (InfobaseId.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(InfobaseId);
      }
      if (lastActiveAt_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(LastActiveAt);
      }
      if (Hibernate != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(Hibernate);
      }
      if (PassiveSessionHibernateTime != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(PassiveSessionHibernateTime);
      }
      if (HibernateSessionTerminateTime != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(HibernateSessionTerminateTime);
      }
      licenses_.WriteTo(output, _repeated_licenses_codec);
      if (Locale.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(Locale);
      }
      if (ProcessId.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(ProcessId);
      }
      if (Id != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(Id);
      }
      if (startedAt_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(StartedAt);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(UserName);
      }
      if (MemoryCurrent != 0L) {
        output.WriteRawTag(136, 2);
        output.WriteInt64(MemoryCurrent);
      }
      if (MemoryLast5Min != 0L) {
        output.WriteRawTag(144, 2);
        output.WriteInt64(MemoryLast5Min);
      }
      if (MemoryTotal != 0L) {
        output.WriteRawTag(152, 2);
        output.WriteInt64(MemoryTotal);
      }
      if (ReadCurrent != 0L) {
        output.WriteRawTag(160, 2);
        output.WriteInt64(ReadCurrent);
      }
      if (ReadLast5Min != 0L) {
        output.WriteRawTag(168, 2);
        output.WriteInt64(ReadLast5Min);
      }
      if (ReadTotal != 0L) {
        output.WriteRawTag(176, 2);
        output.WriteInt64(ReadTotal);
      }
      if (WriteCurrent != 0L) {
        output.WriteRawTag(184, 2);
        output.WriteInt64(WriteCurrent);
      }
      if (WriteLast5Min != 0L) {
        output.WriteRawTag(192, 2);
        output.WriteInt64(WriteLast5Min);
      }
      if (WriteTotal != 0L) {
        output.WriteRawTag(200, 2);
        output.WriteInt64(WriteTotal);
      }
      if (DurationCurrentService != 0) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(DurationCurrentService);
      }
      if (DurationLast5MinService != 0L) {
        output.WriteRawTag(216, 2);
        output.WriteInt64(DurationLast5MinService);
      }
      if (DurationAllService != 0) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(DurationAllService);
      }
      if (CurrentServiceName.Length != 0) {
        output.WriteRawTag(234, 2);
        output.WriteString(CurrentServiceName);
      }
      if (CpuTimeCurrent != 0L) {
        output.WriteRawTag(240, 2);
        output.WriteInt64(CpuTimeCurrent);
      }
      if (CpuTimeLast5Min != 0L) {
        output.WriteRawTag(248, 2);
        output.WriteInt64(CpuTimeLast5Min);
      }
      if (CpuTimeTotal != 0L) {
        output.WriteRawTag(128, 3);
        output.WriteInt64(CpuTimeTotal);
      }
      if (DataSeparation.Length != 0) {
        output.WriteRawTag(138, 3);
        output.WriteString(DataSeparation);
      }
      if (ClientIpAddress.Length != 0) {
        output.WriteRawTag(146, 3);
        output.WriteString(ClientIpAddress);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(154, 3);
        output.WriteString(ClusterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (AppId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppId);
      }
      if (BlockedByDbms != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BlockedByDbms);
      }
      if (BlockedByLs != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BlockedByLs);
      }
      if (BytesAll != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(BytesAll);
      }
      if (BytesLast5Min != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BytesLast5Min);
      }
      if (CallsAll != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CallsAll);
      }
      if (CallsLast5Min != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(CallsLast5Min);
      }
      if (ConnectionId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ConnectionId);
      }
      if (DbmsBytesAll != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(DbmsBytesAll);
      }
      if (DbmsBytesLast5Min != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(DbmsBytesLast5Min);
      }
      if (DbProcInfo.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DbProcInfo);
      }
      if (DbProcTook != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(DbProcTook);
      }
      if (dbProcTookAt_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(DbProcTookAt);
      }
      if (DurationAll != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(DurationAll);
      }
      if (DurationAllDbms != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(DurationAllDbms);
      }
      if (DurationCurrent != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(DurationCurrent);
      }
      if (DurationCurrentDbms != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(DurationCurrentDbms);
      }
      if (DurationLast5Min != 0L) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(DurationLast5Min);
      }
      if (DurationLast5MinDbms != 0L) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(DurationLast5MinDbms);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Host);
      }
      if (InfobaseId.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(InfobaseId);
      }
      if (lastActiveAt_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(LastActiveAt);
      }
      if (Hibernate != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(Hibernate);
      }
      if (PassiveSessionHibernateTime != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(PassiveSessionHibernateTime);
      }
      if (HibernateSessionTerminateTime != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(HibernateSessionTerminateTime);
      }
      licenses_.WriteTo(ref output, _repeated_licenses_codec);
      if (Locale.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(Locale);
      }
      if (ProcessId.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(ProcessId);
      }
      if (Id != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(Id);
      }
      if (startedAt_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(StartedAt);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(UserName);
      }
      if (MemoryCurrent != 0L) {
        output.WriteRawTag(136, 2);
        output.WriteInt64(MemoryCurrent);
      }
      if (MemoryLast5Min != 0L) {
        output.WriteRawTag(144, 2);
        output.WriteInt64(MemoryLast5Min);
      }
      if (MemoryTotal != 0L) {
        output.WriteRawTag(152, 2);
        output.WriteInt64(MemoryTotal);
      }
      if (ReadCurrent != 0L) {
        output.WriteRawTag(160, 2);
        output.WriteInt64(ReadCurrent);
      }
      if (ReadLast5Min != 0L) {
        output.WriteRawTag(168, 2);
        output.WriteInt64(ReadLast5Min);
      }
      if (ReadTotal != 0L) {
        output.WriteRawTag(176, 2);
        output.WriteInt64(ReadTotal);
      }
      if (WriteCurrent != 0L) {
        output.WriteRawTag(184, 2);
        output.WriteInt64(WriteCurrent);
      }
      if (WriteLast5Min != 0L) {
        output.WriteRawTag(192, 2);
        output.WriteInt64(WriteLast5Min);
      }
      if (WriteTotal != 0L) {
        output.WriteRawTag(200, 2);
        output.WriteInt64(WriteTotal);
      }
      if (DurationCurrentService != 0) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(DurationCurrentService);
      }
      if (DurationLast5MinService != 0L) {
        output.WriteRawTag(216, 2);
        output.WriteInt64(DurationLast5MinService);
      }
      if (DurationAllService != 0) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(DurationAllService);
      }
      if (CurrentServiceName.Length != 0) {
        output.WriteRawTag(234, 2);
        output.WriteString(CurrentServiceName);
      }
      if (CpuTimeCurrent != 0L) {
        output.WriteRawTag(240, 2);
        output.WriteInt64(CpuTimeCurrent);
      }
      if (CpuTimeLast5Min != 0L) {
        output.WriteRawTag(248, 2);
        output.WriteInt64(CpuTimeLast5Min);
      }
      if (CpuTimeTotal != 0L) {
        output.WriteRawTag(128, 3);
        output.WriteInt64(CpuTimeTotal);
      }
      if (DataSeparation.Length != 0) {
        output.WriteRawTag(138, 3);
        output.WriteString(DataSeparation);
      }
      if (ClientIpAddress.Length != 0) {
        output.WriteRawTag(146, 3);
        output.WriteString(ClientIpAddress);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(154, 3);
        output.WriteString(ClusterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (BlockedByDbms != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlockedByDbms);
      }
      if (BlockedByLs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlockedByLs);
      }
      if (BytesAll != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BytesAll);
      }
      if (BytesLast5Min != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BytesLast5Min);
      }
      if (CallsAll != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CallsAll);
      }
      if (CallsLast5Min != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CallsLast5Min);
      }
      if (ConnectionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionId);
      }
      if (DbmsBytesAll != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DbmsBytesAll);
      }
      if (DbmsBytesLast5Min != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DbmsBytesLast5Min);
      }
      if (DbProcInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DbProcInfo);
      }
      if (DbProcTook != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DbProcTook);
      }
      if (dbProcTookAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DbProcTookAt);
      }
      if (DurationAll != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DurationAll);
      }
      if (DurationAllDbms != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DurationAllDbms);
      }
      if (DurationCurrent != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DurationCurrent);
      }
      if (DurationCurrentDbms != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DurationCurrentDbms);
      }
      if (DurationLast5Min != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(DurationLast5Min);
      }
      if (DurationLast5MinDbms != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(DurationLast5MinDbms);
      }
      if (Host.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (InfobaseId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InfobaseId);
      }
      if (lastActiveAt_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LastActiveAt);
      }
      if (Hibernate != false) {
        size += 2 + 1;
      }
      if (PassiveSessionHibernateTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PassiveSessionHibernateTime);
      }
      if (HibernateSessionTerminateTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HibernateSessionTerminateTime);
      }
      size += licenses_.CalculateSize(_repeated_licenses_codec);
      if (Locale.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Locale);
      }
      if (ProcessId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ProcessId);
      }
      if (Id != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (startedAt_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StartedAt);
      }
      if (UserName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (MemoryCurrent != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MemoryCurrent);
      }
      if (MemoryLast5Min != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MemoryLast5Min);
      }
      if (MemoryTotal != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MemoryTotal);
      }
      if (ReadCurrent != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ReadCurrent);
      }
      if (ReadLast5Min != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ReadLast5Min);
      }
      if (ReadTotal != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ReadTotal);
      }
      if (WriteCurrent != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(WriteCurrent);
      }
      if (WriteLast5Min != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(WriteLast5Min);
      }
      if (WriteTotal != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(WriteTotal);
      }
      if (DurationCurrentService != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DurationCurrentService);
      }
      if (DurationLast5MinService != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(DurationLast5MinService);
      }
      if (DurationAllService != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DurationAllService);
      }
      if (CurrentServiceName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CurrentServiceName);
      }
      if (CpuTimeCurrent != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(CpuTimeCurrent);
      }
      if (CpuTimeLast5Min != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(CpuTimeLast5Min);
      }
      if (CpuTimeTotal != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(CpuTimeTotal);
      }
      if (DataSeparation.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DataSeparation);
      }
      if (ClientIpAddress.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientIpAddress);
      }
      if (ClusterId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SessionInfo other) {
      if (other == null) {
        return;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.BlockedByDbms != 0) {
        BlockedByDbms = other.BlockedByDbms;
      }
      if (other.BlockedByLs != 0) {
        BlockedByLs = other.BlockedByLs;
      }
      if (other.BytesAll != 0L) {
        BytesAll = other.BytesAll;
      }
      if (other.BytesLast5Min != 0L) {
        BytesLast5Min = other.BytesLast5Min;
      }
      if (other.CallsAll != 0) {
        CallsAll = other.CallsAll;
      }
      if (other.CallsLast5Min != 0L) {
        CallsLast5Min = other.CallsLast5Min;
      }
      if (other.ConnectionId.Length != 0) {
        ConnectionId = other.ConnectionId;
      }
      if (other.DbmsBytesAll != 0L) {
        DbmsBytesAll = other.DbmsBytesAll;
      }
      if (other.DbmsBytesLast5Min != 0L) {
        DbmsBytesLast5Min = other.DbmsBytesLast5Min;
      }
      if (other.DbProcInfo.Length != 0) {
        DbProcInfo = other.DbProcInfo;
      }
      if (other.DbProcTook != 0) {
        DbProcTook = other.DbProcTook;
      }
      if (other.dbProcTookAt_ != null) {
        if (dbProcTookAt_ == null) {
          DbProcTookAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DbProcTookAt.MergeFrom(other.DbProcTookAt);
      }
      if (other.DurationAll != 0) {
        DurationAll = other.DurationAll;
      }
      if (other.DurationAllDbms != 0) {
        DurationAllDbms = other.DurationAllDbms;
      }
      if (other.DurationCurrent != 0) {
        DurationCurrent = other.DurationCurrent;
      }
      if (other.DurationCurrentDbms != 0) {
        DurationCurrentDbms = other.DurationCurrentDbms;
      }
      if (other.DurationLast5Min != 0L) {
        DurationLast5Min = other.DurationLast5Min;
      }
      if (other.DurationLast5MinDbms != 0L) {
        DurationLast5MinDbms = other.DurationLast5MinDbms;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.InfobaseId.Length != 0) {
        InfobaseId = other.InfobaseId;
      }
      if (other.lastActiveAt_ != null) {
        if (lastActiveAt_ == null) {
          LastActiveAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastActiveAt.MergeFrom(other.LastActiveAt);
      }
      if (other.Hibernate != false) {
        Hibernate = other.Hibernate;
      }
      if (other.PassiveSessionHibernateTime != 0) {
        PassiveSessionHibernateTime = other.PassiveSessionHibernateTime;
      }
      if (other.HibernateSessionTerminateTime != 0) {
        HibernateSessionTerminateTime = other.HibernateSessionTerminateTime;
      }
      licenses_.Add(other.licenses_);
      if (other.Locale.Length != 0) {
        Locale = other.Locale;
      }
      if (other.ProcessId.Length != 0) {
        ProcessId = other.ProcessId;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.startedAt_ != null) {
        if (startedAt_ == null) {
          StartedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartedAt.MergeFrom(other.StartedAt);
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.MemoryCurrent != 0L) {
        MemoryCurrent = other.MemoryCurrent;
      }
      if (other.MemoryLast5Min != 0L) {
        MemoryLast5Min = other.MemoryLast5Min;
      }
      if (other.MemoryTotal != 0L) {
        MemoryTotal = other.MemoryTotal;
      }
      if (other.ReadCurrent != 0L) {
        ReadCurrent = other.ReadCurrent;
      }
      if (other.ReadLast5Min != 0L) {
        ReadLast5Min = other.ReadLast5Min;
      }
      if (other.ReadTotal != 0L) {
        ReadTotal = other.ReadTotal;
      }
      if (other.WriteCurrent != 0L) {
        WriteCurrent = other.WriteCurrent;
      }
      if (other.WriteLast5Min != 0L) {
        WriteLast5Min = other.WriteLast5Min;
      }
      if (other.WriteTotal != 0L) {
        WriteTotal = other.WriteTotal;
      }
      if (other.DurationCurrentService != 0) {
        DurationCurrentService = other.DurationCurrentService;
      }
      if (other.DurationLast5MinService != 0L) {
        DurationLast5MinService = other.DurationLast5MinService;
      }
      if (other.DurationAllService != 0) {
        DurationAllService = other.DurationAllService;
      }
      if (other.CurrentServiceName.Length != 0) {
        CurrentServiceName = other.CurrentServiceName;
      }
      if (other.CpuTimeCurrent != 0L) {
        CpuTimeCurrent = other.CpuTimeCurrent;
      }
      if (other.CpuTimeLast5Min != 0L) {
        CpuTimeLast5Min = other.CpuTimeLast5Min;
      }
      if (other.CpuTimeTotal != 0L) {
        CpuTimeTotal = other.CpuTimeTotal;
      }
      if (other.DataSeparation.Length != 0) {
        DataSeparation = other.DataSeparation;
      }
      if (other.ClientIpAddress.Length != 0) {
        ClientIpAddress = other.ClientIpAddress;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 18: {
            AppId = input.ReadString();
            break;
          }
          case 24: {
            BlockedByDbms = input.ReadInt32();
            break;
          }
          case 32: {
            BlockedByLs = input.ReadInt32();
            break;
          }
          case 40: {
            BytesAll = input.ReadInt64();
            break;
          }
          case 48: {
            BytesLast5Min = input.ReadInt64();
            break;
          }
          case 56: {
            CallsAll = input.ReadInt32();
            break;
          }
          case 64: {
            CallsLast5Min = input.ReadInt64();
            break;
          }
          case 74: {
            ConnectionId = input.ReadString();
            break;
          }
          case 80: {
            DbmsBytesAll = input.ReadInt64();
            break;
          }
          case 88: {
            DbmsBytesLast5Min = input.ReadInt64();
            break;
          }
          case 98: {
            DbProcInfo = input.ReadString();
            break;
          }
          case 104: {
            DbProcTook = input.ReadInt32();
            break;
          }
          case 114: {
            if (dbProcTookAt_ == null) {
              DbProcTookAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DbProcTookAt);
            break;
          }
          case 120: {
            DurationAll = input.ReadInt32();
            break;
          }
          case 128: {
            DurationAllDbms = input.ReadInt32();
            break;
          }
          case 136: {
            DurationCurrent = input.ReadInt32();
            break;
          }
          case 144: {
            DurationCurrentDbms = input.ReadInt32();
            break;
          }
          case 152: {
            DurationLast5Min = input.ReadInt64();
            break;
          }
          case 160: {
            DurationLast5MinDbms = input.ReadInt64();
            break;
          }
          case 170: {
            Host = input.ReadString();
            break;
          }
          case 178: {
            InfobaseId = input.ReadString();
            break;
          }
          case 186: {
            if (lastActiveAt_ == null) {
              LastActiveAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastActiveAt);
            break;
          }
          case 192: {
            Hibernate = input.ReadBool();
            break;
          }
          case 200: {
            PassiveSessionHibernateTime = input.ReadInt32();
            break;
          }
          case 208: {
            HibernateSessionTerminateTime = input.ReadInt32();
            break;
          }
          case 218: {
            licenses_.AddEntriesFrom(input, _repeated_licenses_codec);
            break;
          }
          case 226: {
            Locale = input.ReadString();
            break;
          }
          case 234: {
            ProcessId = input.ReadString();
            break;
          }
          case 240: {
            Id = input.ReadInt32();
            break;
          }
          case 250: {
            if (startedAt_ == null) {
              StartedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartedAt);
            break;
          }
          case 258: {
            UserName = input.ReadString();
            break;
          }
          case 264: {
            MemoryCurrent = input.ReadInt64();
            break;
          }
          case 272: {
            MemoryLast5Min = input.ReadInt64();
            break;
          }
          case 280: {
            MemoryTotal = input.ReadInt64();
            break;
          }
          case 288: {
            ReadCurrent = input.ReadInt64();
            break;
          }
          case 296: {
            ReadLast5Min = input.ReadInt64();
            break;
          }
          case 304: {
            ReadTotal = input.ReadInt64();
            break;
          }
          case 312: {
            WriteCurrent = input.ReadInt64();
            break;
          }
          case 320: {
            WriteLast5Min = input.ReadInt64();
            break;
          }
          case 328: {
            WriteTotal = input.ReadInt64();
            break;
          }
          case 336: {
            DurationCurrentService = input.ReadInt32();
            break;
          }
          case 344: {
            DurationLast5MinService = input.ReadInt64();
            break;
          }
          case 352: {
            DurationAllService = input.ReadInt32();
            break;
          }
          case 362: {
            CurrentServiceName = input.ReadString();
            break;
          }
          case 368: {
            CpuTimeCurrent = input.ReadInt64();
            break;
          }
          case 376: {
            CpuTimeLast5Min = input.ReadInt64();
            break;
          }
          case 384: {
            CpuTimeTotal = input.ReadInt64();
            break;
          }
          case 394: {
            DataSeparation = input.ReadString();
            break;
          }
          case 402: {
            ClientIpAddress = input.ReadString();
            break;
          }
          case 410: {
            ClusterId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 18: {
            AppId = input.ReadString();
            break;
          }
          case 24: {
            BlockedByDbms = input.ReadInt32();
            break;
          }
          case 32: {
            BlockedByLs = input.ReadInt32();
            break;
          }
          case 40: {
            BytesAll = input.ReadInt64();
            break;
          }
          case 48: {
            BytesLast5Min = input.ReadInt64();
            break;
          }
          case 56: {
            CallsAll = input.ReadInt32();
            break;
          }
          case 64: {
            CallsLast5Min = input.ReadInt64();
            break;
          }
          case 74: {
            ConnectionId = input.ReadString();
            break;
          }
          case 80: {
            DbmsBytesAll = input.ReadInt64();
            break;
          }
          case 88: {
            DbmsBytesLast5Min = input.ReadInt64();
            break;
          }
          case 98: {
            DbProcInfo = input.ReadString();
            break;
          }
          case 104: {
            DbProcTook = input.ReadInt32();
            break;
          }
          case 114: {
            if (dbProcTookAt_ == null) {
              DbProcTookAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DbProcTookAt);
            break;
          }
          case 120: {
            DurationAll = input.ReadInt32();
            break;
          }
          case 128: {
            DurationAllDbms = input.ReadInt32();
            break;
          }
          case 136: {
            DurationCurrent = input.ReadInt32();
            break;
          }
          case 144: {
            DurationCurrentDbms = input.ReadInt32();
            break;
          }
          case 152: {
            DurationLast5Min = input.ReadInt64();
            break;
          }
          case 160: {
            DurationLast5MinDbms = input.ReadInt64();
            break;
          }
          case 170: {
            Host = input.ReadString();
            break;
          }
          case 178: {
            InfobaseId = input.ReadString();
            break;
          }
          case 186: {
            if (lastActiveAt_ == null) {
              LastActiveAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastActiveAt);
            break;
          }
          case 192: {
            Hibernate = input.ReadBool();
            break;
          }
          case 200: {
            PassiveSessionHibernateTime = input.ReadInt32();
            break;
          }
          case 208: {
            HibernateSessionTerminateTime = input.ReadInt32();
            break;
          }
          case 218: {
            licenses_.AddEntriesFrom(ref input, _repeated_licenses_codec);
            break;
          }
          case 226: {
            Locale = input.ReadString();
            break;
          }
          case 234: {
            ProcessId = input.ReadString();
            break;
          }
          case 240: {
            Id = input.ReadInt32();
            break;
          }
          case 250: {
            if (startedAt_ == null) {
              StartedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartedAt);
            break;
          }
          case 258: {
            UserName = input.ReadString();
            break;
          }
          case 264: {
            MemoryCurrent = input.ReadInt64();
            break;
          }
          case 272: {
            MemoryLast5Min = input.ReadInt64();
            break;
          }
          case 280: {
            MemoryTotal = input.ReadInt64();
            break;
          }
          case 288: {
            ReadCurrent = input.ReadInt64();
            break;
          }
          case 296: {
            ReadLast5Min = input.ReadInt64();
            break;
          }
          case 304: {
            ReadTotal = input.ReadInt64();
            break;
          }
          case 312: {
            WriteCurrent = input.ReadInt64();
            break;
          }
          case 320: {
            WriteLast5Min = input.ReadInt64();
            break;
          }
          case 328: {
            WriteTotal = input.ReadInt64();
            break;
          }
          case 336: {
            DurationCurrentService = input.ReadInt32();
            break;
          }
          case 344: {
            DurationLast5MinService = input.ReadInt64();
            break;
          }
          case 352: {
            DurationAllService = input.ReadInt32();
            break;
          }
          case 362: {
            CurrentServiceName = input.ReadString();
            break;
          }
          case 368: {
            CpuTimeCurrent = input.ReadInt64();
            break;
          }
          case 376: {
            CpuTimeLast5Min = input.ReadInt64();
            break;
          }
          case 384: {
            CpuTimeTotal = input.ReadInt64();
            break;
          }
          case 394: {
            DataSeparation = input.ReadString();
            break;
          }
          case 402: {
            ClientIpAddress = input.ReadString();
            break;
          }
          case 410: {
            ClusterId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
