syntax = "proto3";

package ras.service.api.v1;
import "google/protobuf/empty.proto";
import "ras/messages/v1/auth_messages.proto";
import "ras/messages/v1/sessions_messages.proto";
import "ras/messages/v1/infobases_messages.proto";
import "ras/messages/v1/clusters_messages.proto";

option go_package = "github.com/v8platform/protos/gen/ras/service/api/v1;service_api_v1";

service RASService {

  // Auth
  rpc AuthenticateCluster(messages.v1.ClusterAuthenticateRequest) returns (google.protobuf.Empty) {};
  rpc AuthenticateInfobase(messages.v1.AuthenticateInfobaseRequest) returns (google.protobuf.Empty) {};
  rpc AuthenticateAgent(messages.v1.AuthenticateAgentRequest) returns (google.protobuf.Empty) {};

  // Clusters
  rpc GetClusters(messages.v1.GetClustersRequest) returns (messages.v1.GetClustersResponse) {};
  rpc GetClusterInfo(messages.v1.GetClusterInfoRequest) returns (messages.v1.GetClusterInfoResponse) {};
  rpc RegCluster(messages.v1.RegClusterRequest) returns (messages.v1.RegClusterResponse) {};
  rpc UnregCluster(messages.v1.UnregClusterRequest) returns (google.protobuf.Empty) {};

  // Sessions
  rpc GetSessions(messages.v1.GetSessionsRequest) returns (messages.v1.GetSessionsResponse) {};

  // infobases
  // GetInfobasesShortRequest
  rpc GetShortInfobases(messages.v1.GetInfobasesShortRequest) returns (messages.v1.GetInfobasesShortResponse) {};
  // GetInfobaseSessionsRequest
  rpc GetInfobaseSessions(messages.v1.GetInfobaseSessionsRequest) returns (messages.v1.GetInfobaseSessionsResponse) {};

}
