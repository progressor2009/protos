
syntax = "proto3";

package ras.serialize.v1;

import "ras/serialize/v1/param.proto";
import "ras/encoding/ras.proto";
import "ras/serialize/v1/types.proto";
import "ras/serialize/v1/admin.proto";
import "google/protobuf/any.proto";


option go_package = "github.com/v8platform/ras/serialize/v1";

option (ras.encoding.options) = {
  generate_unmarshal: true,
  generate_marshaller: true,
  generate_tags: true,
};

message EndpointOpen {
  option (ras.encoding.request_type) = ENDPOINT_OPEN;
  RequestType request_type = 1;
  string service = 2;
  string encoding = 3;
  string Version = 4;
  map<string, Param> params = 5;
}

message EndpointOpenAck {
  option (ras.encoding.request_type) = ENDPOINT_OPEN_ACK;
  RequestType request_type = 1;
  string service_id = 2;
  string Version = 3;
  int32  enpoiont_id = 4;
  map<string, Param> params = 5;
}

message EndpointMessage {
  option (ras.encoding.request_type) = ENDPOINT_MESSAGE;
  option (ras.encoding.message_kind) = MESSAGE;
  RequestType request_type = 1;
  int32 endpoint_id = 2;
  int32 format = 3;
  EndpointMessageKind message_kind = 4;
  EndpointMessageData message_data = 5;
}

message EndpointMessageAck {
  option (ras.encoding.request_type) = ENDPOINT_MESSAGE;
  option (ras.encoding.message_kind) = MESSAGE;
  RequestType request_type = 1;
  int32 endpoint_id = 2;
  int32 format = 3;
  EndpointMessageKind message_kind = 4;
  oneof message_data {
    EndpointMessageData data = 6;
    EndpointMessageFailure failure = 7;
  }
}

message EndpointFailure  {
  option (ras.encoding.request_type) = ENDPOINT_FAILURE;
  option (ras.encoding.message_options) = {
    generate_marshaller: false,
  };
  RequestType request_type = 1;
  string service_id = 2;
  string version = 3;
  int32 endpoint_id = 4;
  string class_cause = 5;
  string message  = 6;
  repeated string trace = 7;
  optional CauseError cause  = 8;
}

message CauseError {
  option (ras.encoding.message_options) = {
    generate_marshaller: false,
  };
  string service_id = 1;
  string message = 2;
  optional CauseError cause = 3;
}

message EndpointMessageData {
  EndpointMessageType message_type = 1;
  bytes data = 2 [(ras.encoding.field) = {
    generate_unmarshal: true,
    generate_marshal: true
  }];
}

message EndpointMessageFailure {
  option (ras.encoding.message_options) = {
    generate_marshaller: false,
  };
  string service_id = 1;
  string message = 2;
  optional CauseError cause = 3;
}