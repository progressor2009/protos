syntax = "proto3";

package ras.messages.v1;

import "ras/encoding/ras.proto";
import "v8platform/serialize/v1/clusters.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option csharp_namespace = "ras.messages.v1";
option go_package = "github.com/v8platform/protos/gen/ras/messages/v1;messagesv1";

message GetClustersRequest {
  option (ras.encoding.options).message_type = "GET_CLUSTERS_REQUEST";
  option (ras.encoding.options).generate_empty = true;
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "GetClustersRequest";
      description: "Получение списка локальных кластеров";
      required: ["GetClusterInfoRequest"];
    };
  };
}

message GetClustersResponse {
  option (ras.encoding.options).message_type = "GET_CLUSTERS_RESPONSE";
  repeated v8platform.serialize.v1.ClusterInfo clusters = 1 [(ras.encoding.field) = {
    order: 1,
  }];;
}

message GetClusterInfoRequest {
  option (ras.encoding.options).message_type = "GET_CLUSTER_INFO_REQUEST";
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "GetClusterInfoRequest";
      description: "Получение информации о локальном кластере";
      required: ["cluster_id"];
    };
  };
  string cluster_id = 1 [(ras.encoding.field) = {order: 1, encoder: "uuid"},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Уникальный идентификатор локального кластера"
      format: "uuid"
      pattern: "^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$"
    }
  ];
}

message GetClusterInfoResponse {
  option (ras.encoding.options).message_type = "GET_CLUSTER_INFO_RESPONSE";
  v8platform.serialize.v1.ClusterInfo cluster_info = 1 [(ras.encoding.field).order = 1];
}

message RegClusterRequest {
  option (ras.encoding.options).message_type = "REG_CLUSTER_REQUEST";
  v8platform.serialize.v1.ClusterInfo cluster_info = 1 [(ras.encoding.field).order = 1];
}

message RegClusterResponse {
  option (ras.encoding.options).message_type = "REG_CLUSTER_RESPONSE";
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "RegClusterResponse";
      description: "Регистрация нового локального кластера на агенте";
      required: ["cluster_id"];
    };
  };
  string cluster_id = 1 [(ras.encoding.field) = {order: 1, encoder: "uuid"},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Уникальный идентификатор локального кластера"
      format: "uuid"
      pattern: "^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$"
    }
  ];
}

message UnregClusterRequest  {
  option (ras.encoding.options).message_type = "UNREG_CLUSTER_REQUEST";
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "UnregClusterRequest";
      description: "Удаление регистрации локального кластера на агенте";
      required: ["cluster_id"];
    };
  };
  string cluster_id = 1 [(ras.encoding.field) = {order: 1, encoder: "uuid"},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Уникальный идентификатор локального кластера"
      format: "uuid"
      pattern: "^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$"
    }
  ];
}

