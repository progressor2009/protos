syntax = "proto3";

package ras.protocol.v1;

import "google/protobuf/any.proto";
import "google/protobuf/descriptor.proto";
import "ras/protocol/v1/param.proto";
import "ras/protocol/v1/types.proto";
import "ras/encoding/ras.proto";


option go_package = "github.com/v8platform/protos/gen/ras/protocol/v1";
option (ras.encoding.options) = {
  generate_unmarshal: true,
  generate_marshaller: true,
  generate_tags: true,
};


// Порядок кодирования/декодирования в формат RAS
message Packet {
  PacketType type = 1 [(ras.encoding.tags) = "ras:\"byte,1\"",
    (ras.encoding.field) =  {
      encoder: "byte",
      order: 1,
    }
  ];
  int32 size = 2 [(ras.encoding.tags) = "ras:\"size,2\"",
    (ras.encoding.field) = {
      encoder: "size",
      order: 2,
    }];

  oneof data {
    option (ras.encoding.oneof_field) = {
      order: 3;
      type_field: 1;
    };
    bytes bytes = 3 [(ras.encoding.tags) = "ras:\"bytes,3\"",
      (ras.encoding.field) = {
        encoder: "bytes",
        order: 3,
        type_field: 1,
        size_field: 2,
        opts: [{key: "bytes_size_field", value: "2"}, { key: "read_chunk_size", value: "4096"}]
      }];
    google.protobuf.Any value = 4 [(ras.encoding.field) = {type_field: 1, order: 3, no_unmarshal: true}];
  };

}
