syntax = "proto3";

package ras.api.v1;

import "v8platform/ras/serialize/clusters.proto";
import "v8platform/ras/field_tag.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "v8platform/ras/api/v1/param.proto";

option go_package = "github.com/v8platform/protos/v8platform/ras/api/v1";

service EndpointService {
  rpc Open(EndpointOpenRequest) returns (EndpointOpenResponse) {};
  rpc Request(EndpointRequest) returns (EndpointResponse) {};
//  rpc Close(GetClusterRequest) returns (GetClusterResponse) {};
}

message EndpointOpenRequest {
  EndpointServiceType service = 1;
  string encoding = 2;
  string Version = 3;
  map<string, Param> params = 4;
}

message EndpointOpenResponse {

  string service_id = 1;
  string Version = 1;
  int32  enpoiont_id = 3;
  map<string, Param> params = 4;

}

enum EndpointServiceType {
  UNKNOWN_SERVICE = 0;
  ADMIN_CLUSTER = 1; // "v8.service.Admin.Cluster"
}

enum Format {
   FORMAT_UNKNOWN = 0;
   FORMAT_255 = 1;
}

message EndpointRequest  {
  int32 endpoint_id = 1;
  int32 format = 2;  // TODO int16
//  EndpointMessageType type = 3;
//  Message message = 4;
}

message EndpointResponse {
  int32 endpoint_id = 1;
  int32 format = 2;  // TODO int16
}
